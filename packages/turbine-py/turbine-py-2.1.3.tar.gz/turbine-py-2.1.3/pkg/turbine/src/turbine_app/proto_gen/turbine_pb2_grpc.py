# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
from . import turbine_pb2 as turbine__pb2


class TurbineServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Init = channel.unary_unary(
                '/turbine_core.TurbineService/Init',
                request_serializer=turbine__pb2.InitRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetResource = channel.unary_unary(
                '/turbine_core.TurbineService/GetResource',
                request_serializer=turbine__pb2.GetResourceRequest.SerializeToString,
                response_deserializer=turbine__pb2.Resource.FromString,
                )
        self.ReadCollection = channel.unary_unary(
                '/turbine_core.TurbineService/ReadCollection',
                request_serializer=turbine__pb2.ReadCollectionRequest.SerializeToString,
                response_deserializer=turbine__pb2.Collection.FromString,
                )
        self.WriteCollectionToResource = channel.unary_unary(
                '/turbine_core.TurbineService/WriteCollectionToResource',
                request_serializer=turbine__pb2.WriteCollectionRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.AddProcessToCollection = channel.unary_unary(
                '/turbine_core.TurbineService/AddProcessToCollection',
                request_serializer=turbine__pb2.ProcessCollectionRequest.SerializeToString,
                response_deserializer=turbine__pb2.Collection.FromString,
                )
        self.RegisterSecret = channel.unary_unary(
                '/turbine_core.TurbineService/RegisterSecret',
                request_serializer=turbine__pb2.Secret.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.HasFunctions = channel.unary_unary(
                '/turbine_core.TurbineService/HasFunctions',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
                )
        self.ListResources = channel.unary_unary(
                '/turbine_core.TurbineService/ListResources',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=turbine__pb2.ListResourcesResponse.FromString,
                )
        self.GetSpec = channel.unary_unary(
                '/turbine_core.TurbineService/GetSpec',
                request_serializer=turbine__pb2.GetSpecRequest.SerializeToString,
                response_deserializer=turbine__pb2.GetSpecResponse.FromString,
                )


class TurbineServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Init(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetResource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadCollection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteCollectionToResource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddProcessToCollection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterSecret(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HasFunctions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListResources(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSpec(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TurbineServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Init': grpc.unary_unary_rpc_method_handler(
                    servicer.Init,
                    request_deserializer=turbine__pb2.InitRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetResource': grpc.unary_unary_rpc_method_handler(
                    servicer.GetResource,
                    request_deserializer=turbine__pb2.GetResourceRequest.FromString,
                    response_serializer=turbine__pb2.Resource.SerializeToString,
            ),
            'ReadCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadCollection,
                    request_deserializer=turbine__pb2.ReadCollectionRequest.FromString,
                    response_serializer=turbine__pb2.Collection.SerializeToString,
            ),
            'WriteCollectionToResource': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteCollectionToResource,
                    request_deserializer=turbine__pb2.WriteCollectionRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'AddProcessToCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.AddProcessToCollection,
                    request_deserializer=turbine__pb2.ProcessCollectionRequest.FromString,
                    response_serializer=turbine__pb2.Collection.SerializeToString,
            ),
            'RegisterSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterSecret,
                    request_deserializer=turbine__pb2.Secret.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'HasFunctions': grpc.unary_unary_rpc_method_handler(
                    servicer.HasFunctions,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.SerializeToString,
            ),
            'ListResources': grpc.unary_unary_rpc_method_handler(
                    servicer.ListResources,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=turbine__pb2.ListResourcesResponse.SerializeToString,
            ),
            'GetSpec': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSpec,
                    request_deserializer=turbine__pb2.GetSpecRequest.FromString,
                    response_serializer=turbine__pb2.GetSpecResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'turbine_core.TurbineService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TurbineService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/turbine_core.TurbineService/Init',
            turbine__pb2.InitRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/turbine_core.TurbineService/GetResource',
            turbine__pb2.GetResourceRequest.SerializeToString,
            turbine__pb2.Resource.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/turbine_core.TurbineService/ReadCollection',
            turbine__pb2.ReadCollectionRequest.SerializeToString,
            turbine__pb2.Collection.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteCollectionToResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/turbine_core.TurbineService/WriteCollectionToResource',
            turbine__pb2.WriteCollectionRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddProcessToCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/turbine_core.TurbineService/AddProcessToCollection',
            turbine__pb2.ProcessCollectionRequest.SerializeToString,
            turbine__pb2.Collection.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/turbine_core.TurbineService/RegisterSecret',
            turbine__pb2.Secret.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HasFunctions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/turbine_core.TurbineService/HasFunctions',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListResources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/turbine_core.TurbineService/ListResources',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            turbine__pb2.ListResourcesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSpec(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/turbine_core.TurbineService/GetSpec',
            turbine__pb2.GetSpecRequest.SerializeToString,
            turbine__pb2.GetSpecResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
