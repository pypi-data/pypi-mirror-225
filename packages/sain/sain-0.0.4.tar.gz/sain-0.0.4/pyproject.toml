[tool.poetry]
name = "sain"
version = "0.0.4"
description = "Standard Rust core types implementations for Python."
authors = ["nxtlo <dhmony-99@hotmail.com>"]
license = "BSD-3-Clause license"
keywords = ["Rust", "config"]
readme = "README.md"
repository = "https://github.com/nxtlo/sain"
packages = [{ include = "sain" }, { include = "sain/**/*.py" }]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.10"

[tool.pytest.ini_options]
xfail_strict = true
norecursedirs = "docs *.egg-info .git .nox .pytest_cache .venv"

[tool.black]
line-length = 120
target-version = ["py310"]
include = ".*pyi?$"

[tool.isort]
profile = "black"
force_single_line = true

[tool.mypy]
python_version = "3.10"
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
check_untyped_defs = true

# Ignored
ignore_missing_imports = true
ignore_missing_imports_per_module = true

# Warns
warn_no_return = true
warn_return_any = true

# Disallowed
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

# Allowed
allow_redefinition = true

[tool.pyright]
include = ["sain", "tests", "examples"]
venvPath = "."
venv = ".venv"
pythonVersion = "3.10"
typeCheckingMode = "strict"
reportUnboundVariable = "none"
reportUnknownParameterType = "error"
reportUnknownLambdaType = "warning"
reportUnknownMemberType = "warning"
reportUnknownArgumentType = "warning"
reportUnknownVariableType = "warning"
reportMissingModuleSource = "error"
reportMissingParameterType = "error"
reportMissingTypeArgument = "error"
reportMissingTypeStubs = "error"
reportGeneralTypeIssues = "information"
reportPrivateUsage = "warning"
reportIncompatibleMethodOverride = "none"
# This will always cause warnings above license.
reportImportCycles = "warning"
reportUnusedImport = "warning"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
