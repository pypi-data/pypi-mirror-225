[tool.poetry]
name = "s3-tool"
version = "0.3.6"
description = "S3 CLI Tool to execute basic commands"
license = "MIT"
authors = ["Ivan Andre Scheel <andrescheel@protonmail.com>"]
readme = "README.md"
homepage = "https://github.com/necromeo/s3-tool"

exclude = [".env", "test.py"]

[tool.poetry.scripts]
s3-tool = "s3_tool.main:app"

[tool.poetry.dependencies]
python = "^3.11"
typer = {extras = ["all"], version = "^0.9.0"}
python-dotenv = "^1.0.0"
boto3 = "^1.14.20"
tqdm = "^4.66.1"


[tool.poetry.group.dev.dependencies]
mypy = "^1.5.1"
black = "^23.7.0"
ruff = "*"
pytest = "*"
moto = "*"
coverage = "*"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
markers = [
    "needs_input: marks tests as needing input. Run with -s or --capture=no. Enter 'y' first, then 'n' when prompted (deselect with '-m \"not needs_input\"')",
]

[tool.ruff]
line-length = 120
fix = false
fixable = ["E", "F", "I", "COM812"]
show-source = true

# Enable Pyflakes `E` and `F` codes by default.
select = [
    "E",
    "F",
    "COM", # Commas
    "PLC",
    "PLE",
    "PLW",
    "ERA",
    "T201",
]
ignore = ["ERA001"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".pytest_cache"
]
per-file-ignores = {}

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10
target-version = "py310"
