
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "programleft+-left*/AND BOOLEAN BYTE CHAR CHAR_LIT CLASS DEC DEC_LIT DIV_DEC DOUBLE ELSE EXTENDS FALSE FLOAT FLOAT_LIT ID IF IMPORT INC INT LONG MULTI_LINE_COMMENT MUL_INC NEW NULL OR PACKAGE PRIVATE PUBLIC RETURN SHORT SINGLE_LINE_COMMENT STATIC STR_LIT TRUE VOID WHILE\n    package_statement_or_empty : package_statement\n                               | empty\n    \n    statement_without_semicolon : variable_declaration\n                                | variable_initialization\n                                | expression_statement\n                                | return_statement\n                                | variable_increment\n    \n    statement_with_semicolon_or_comment : statement_without_semicolon ';'\n                                        | if_statement\n                                        | while_statement\n                                        | comment_statement\n    \n    package_statement : PACKAGE qualified_identifier ';'\n    \n    expression : expression '+' expression\n               | expression '-' expression\n               | expression '*' expression\n               | expression '/' expression\n               | expression '%' expression\n               | '(' expression ')'\n               | factor\n    \n    comment_list : comment\n                 | comment comment_list\n    \n    variable_declaration : variable_type identifier\n    \n    if_statement : IF '(' comparison_expression ')' '{' statement_list_or_empty '}' else_statement_or_empty\n    \n    program : class_declaration_with_comments\n    \n    pre_class_declaration_list : pre_class_declaration\n                               | pre_class_declaration_list pre_class_declaration\n    \n    variable_initialization : variable_type identifier '=' expression\n    \n    comparison_expression : comparison_expression '=' '=' comparison_expression\n                          | comparison_expression '!' '=' comparison_expression\n                          | comparison_expression '>' '=' comparison_expression\n                          | comparison_expression '<' '=' comparison_expression\n                          | comparison_expression '<' comparison_expression\n                          | comparison_expression '>' comparison_expression\n                          | TRUE\n                          | FALSE\n    \n    comment : SINGLE_LINE_COMMENT\n            | multi_line_comment\n    \n    class_declaration : class_modifier_list CLASS identifier extends_or_empty '{' class_body '}'\n    \n    pre_class_declaration : comment_list\n                          | import_statement\n                          | empty\n    \n    class_declaration_with_comments : package_statement_or_empty pre_class_declaration_list class_declaration comment_list_or_empty\n    \n    expression_statement : expression\n    \n    multi_line_comment : MULTI_LINE_COMMENT\n    \n    class_modifier_list : class_modifier\n                        | class_modifier_list class_modifier\n    \n    factor : DEC_LIT\n           | FLOAT_LIT\n           | STR_LIT\n           | CHAR_LIT\n           | unary_minus\n           | qualified_identifier\n           | method_call\n           | new_statement\n    \n    import_statement : IMPORT qualified_identifier ';'\n    \n    return_statement : RETURN expression\n                     | RETURN empty\n    \n    variable_type : identifier\n                  | BYTE\n                  | SHORT\n                  | CHAR\n                  | INT\n                  | LONG\n                  | FLOAT\n                  | DOUBLE\n                  | BOOLEAN\n                  | array_type\n    \n    variable_increment : identifier '+' '+'\n                       | identifier INC expression\n    \n    class_modifier : PUBLIC\n                   | PRIVATE\n                   | VOID\n                   | STATIC\n                   | variable_type\n    \n    unary_minus : '-' DEC_LIT\n                | '-' FLOAT_LIT\n    \n    else_statement_or_empty : ELSE '{' statement_list_or_empty '}'\n                            | empty\n    \n    extends_or_empty : EXTENDS qualified_identifier\n                     | empty\n    \n    identifier : ID\n    \n    method_call : qualified_identifier '(' argument_list ')'\n    \n    array_type : variable_type '[' ']'\n    \n    while_statement : WHILE '(' comparison_expression ')' '{' statement_list_or_empty '}'\n    \n    class_body : method_list_or_empty\n    \n    argument_list : expression\n                  | expression ',' argument_list\n                  | empty\n    \n    qualified_identifier : identifier\n                         | identifier '.' qualified_identifier\n    \n    comment_statement : comment\n    \n    method_list_or_empty : method_list\n                         | empty\n    \n    new_statement : NEW qualified_identifier '(' argument_list ')'\n    \n    empty :\n    \n    method_list : method_or_comment\n                | method_list method_or_comment\n    \n    comment_list_or_empty : comment_list\n                          | empty\n    \n    method_or_comment : field\n                      | method\n                      | comment\n    \n    field : class_modifier_list identifier '=' expression ';'\n    \n    method : class_modifier_list identifier '(' parameter_list_or_empty ')' '{' statement_list_or_empty '}'\n    \n    parameter_list_or_empty : parameter_list\n                            | empty\n    \n    parameter_list : parameter_with_type\n                   | parameter_with_type ',' parameter_list\n    \n    parameter_with_type : variable_type identifier\n    \n    statement_list_or_empty : statement_list\n                            | empty\n    \n    statement_list : statement_with_semicolon_or_comment\n                   | statement_list statement_with_semicolon_or_comment\n    "
    
_lr_action_items = {'PACKAGE':([0,],[6,]),'IMPORT':([0,3,4,5,7,8,9,10,11,12,14,15,16,21,39,41,49,],[-95,13,-1,-2,13,-25,-39,-40,-41,-20,-36,-37,-44,-26,-21,-12,-55,]),'SINGLE_LINE_COMMENT':([0,3,4,5,7,8,9,10,11,12,14,15,16,20,21,39,41,49,56,61,63,64,65,66,68,69,90,114,121,123,125,126,127,135,143,144,145,165,172,179,180,181,183,184,186,],[-95,14,-1,-2,14,-25,-39,-40,-41,14,-36,-37,-44,14,-26,-21,-12,-55,14,14,-96,-100,-101,-102,-38,-97,-103,14,14,-112,-9,-10,-11,-91,-104,-113,-8,14,14,-95,-84,-23,-78,14,-77,]),'MULTI_LINE_COMMENT':([0,3,4,5,7,8,9,10,11,12,14,15,16,20,21,39,41,49,56,61,63,64,65,66,68,69,90,114,121,123,125,126,127,135,143,144,145,165,172,179,180,181,183,184,186,],[-95,16,-1,-2,16,-25,-39,-40,-41,16,-36,-37,-44,16,-26,-21,-12,-55,16,16,-96,-100,-101,-102,-38,-97,-103,16,16,-112,-9,-10,-11,-91,-104,-113,-8,16,16,-95,-84,-23,-78,16,-77,]),'PUBLIC':([0,3,4,5,7,8,9,10,11,12,14,15,16,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,47,49,52,56,58,61,63,64,65,66,67,69,90,143,],[-95,-95,-1,-2,25,-25,-39,-40,-41,-20,-36,-37,-44,-81,-26,25,-58,-45,-70,-71,-72,-73,-74,-59,-60,-61,-62,-63,-64,-65,-66,-67,-21,-12,-46,-55,-83,25,25,25,-96,-100,-101,-102,-58,-97,-103,-104,]),'PRIVATE':([0,3,4,5,7,8,9,10,11,12,14,15,16,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,47,49,52,56,58,61,63,64,65,66,67,69,90,143,],[-95,-95,-1,-2,26,-25,-39,-40,-41,-20,-36,-37,-44,-81,-26,26,-58,-45,-70,-71,-72,-73,-74,-59,-60,-61,-62,-63,-64,-65,-66,-67,-21,-12,-46,-55,-83,26,26,26,-96,-100,-101,-102,-58,-97,-103,-104,]),'VOID':([0,3,4,5,7,8,9,10,11,12,14,15,16,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,47,49,52,56,58,61,63,64,65,66,67,69,90,143,],[-95,-95,-1,-2,27,-25,-39,-40,-41,-20,-36,-37,-44,-81,-26,27,-58,-45,-70,-71,-72,-73,-74,-59,-60,-61,-62,-63,-64,-65,-66,-67,-21,-12,-46,-55,-83,27,27,27,-96,-100,-101,-102,-58,-97,-103,-104,]),'STATIC':([0,3,4,5,7,8,9,10,11,12,14,15,16,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,47,49,52,56,58,61,63,64,65,66,67,69,90,143,],[-95,-95,-1,-2,28,-25,-39,-40,-41,-20,-36,-37,-44,-81,-26,28,-58,-45,-70,-71,-72,-73,-74,-59,-60,-61,-62,-63,-64,-65,-66,-67,-21,-12,-46,-55,-83,28,28,28,-96,-100,-101,-102,-58,-97,-103,-104,]),'BYTE':([0,3,4,5,7,8,9,10,11,12,14,15,16,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,47,49,52,56,58,61,63,64,65,66,67,69,71,90,102,114,121,123,125,126,127,135,143,144,145,165,172,179,180,181,183,184,186,],[-95,-95,-1,-2,30,-25,-39,-40,-41,-20,-36,-37,-44,-81,-26,30,-58,-45,-70,-71,-72,-73,-74,-59,-60,-61,-62,-63,-64,-65,-66,-67,-21,-12,-46,-55,-83,30,30,30,-96,-100,-101,-102,-58,-97,30,-103,30,30,30,-112,-9,-10,-11,-91,-104,-113,-8,30,30,-95,-84,-23,-78,30,-77,]),'SHORT':([0,3,4,5,7,8,9,10,11,12,14,15,16,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,47,49,52,56,58,61,63,64,65,66,67,69,71,90,102,114,121,123,125,126,127,135,143,144,145,165,172,179,180,181,183,184,186,],[-95,-95,-1,-2,31,-25,-39,-40,-41,-20,-36,-37,-44,-81,-26,31,-58,-45,-70,-71,-72,-73,-74,-59,-60,-61,-62,-63,-64,-65,-66,-67,-21,-12,-46,-55,-83,31,31,31,-96,-100,-101,-102,-58,-97,31,-103,31,31,31,-112,-9,-10,-11,-91,-104,-113,-8,31,31,-95,-84,-23,-78,31,-77,]),'CHAR':([0,3,4,5,7,8,9,10,11,12,14,15,16,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,47,49,52,56,58,61,63,64,65,66,67,69,71,90,102,114,121,123,125,126,127,135,143,144,145,165,172,179,180,181,183,184,186,],[-95,-95,-1,-2,32,-25,-39,-40,-41,-20,-36,-37,-44,-81,-26,32,-58,-45,-70,-71,-72,-73,-74,-59,-60,-61,-62,-63,-64,-65,-66,-67,-21,-12,-46,-55,-83,32,32,32,-96,-100,-101,-102,-58,-97,32,-103,32,32,32,-112,-9,-10,-11,-91,-104,-113,-8,32,32,-95,-84,-23,-78,32,-77,]),'INT':([0,3,4,5,7,8,9,10,11,12,14,15,16,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,47,49,52,56,58,61,63,64,65,66,67,69,71,90,102,114,121,123,125,126,127,135,143,144,145,165,172,179,180,181,183,184,186,],[-95,-95,-1,-2,33,-25,-39,-40,-41,-20,-36,-37,-44,-81,-26,33,-58,-45,-70,-71,-72,-73,-74,-59,-60,-61,-62,-63,-64,-65,-66,-67,-21,-12,-46,-55,-83,33,33,33,-96,-100,-101,-102,-58,-97,33,-103,33,33,33,-112,-9,-10,-11,-91,-104,-113,-8,33,33,-95,-84,-23,-78,33,-77,]),'LONG':([0,3,4,5,7,8,9,10,11,12,14,15,16,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,47,49,52,56,58,61,63,64,65,66,67,69,71,90,102,114,121,123,125,126,127,135,143,144,145,165,172,179,180,181,183,184,186,],[-95,-95,-1,-2,34,-25,-39,-40,-41,-20,-36,-37,-44,-81,-26,34,-58,-45,-70,-71,-72,-73,-74,-59,-60,-61,-62,-63,-64,-65,-66,-67,-21,-12,-46,-55,-83,34,34,34,-96,-100,-101,-102,-58,-97,34,-103,34,34,34,-112,-9,-10,-11,-91,-104,-113,-8,34,34,-95,-84,-23,-78,34,-77,]),'FLOAT':([0,3,4,5,7,8,9,10,11,12,14,15,16,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,47,49,52,56,58,61,63,64,65,66,67,69,71,90,102,114,121,123,125,126,127,135,143,144,145,165,172,179,180,181,183,184,186,],[-95,-95,-1,-2,35,-25,-39,-40,-41,-20,-36,-37,-44,-81,-26,35,-58,-45,-70,-71,-72,-73,-74,-59,-60,-61,-62,-63,-64,-65,-66,-67,-21,-12,-46,-55,-83,35,35,35,-96,-100,-101,-102,-58,-97,35,-103,35,35,35,-112,-9,-10,-11,-91,-104,-113,-8,35,35,-95,-84,-23,-78,35,-77,]),'DOUBLE':([0,3,4,5,7,8,9,10,11,12,14,15,16,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,47,49,52,56,58,61,63,64,65,66,67,69,71,90,102,114,121,123,125,126,127,135,143,144,145,165,172,179,180,181,183,184,186,],[-95,-95,-1,-2,36,-25,-39,-40,-41,-20,-36,-37,-44,-81,-26,36,-58,-45,-70,-71,-72,-73,-74,-59,-60,-61,-62,-63,-64,-65,-66,-67,-21,-12,-46,-55,-83,36,36,36,-96,-100,-101,-102,-58,-97,36,-103,36,36,36,-112,-9,-10,-11,-91,-104,-113,-8,36,36,-95,-84,-23,-78,36,-77,]),'BOOLEAN':([0,3,4,5,7,8,9,10,11,12,14,15,16,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,47,49,52,56,58,61,63,64,65,66,67,69,71,90,102,114,121,123,125,126,127,135,143,144,145,165,172,179,180,181,183,184,186,],[-95,-95,-1,-2,37,-25,-39,-40,-41,-20,-36,-37,-44,-81,-26,37,-58,-45,-70,-71,-72,-73,-74,-59,-60,-61,-62,-63,-64,-65,-66,-67,-21,-12,-46,-55,-83,37,37,37,-96,-100,-101,-102,-58,-97,37,-103,37,37,37,-112,-9,-10,-11,-91,-104,-113,-8,37,37,-95,-84,-23,-78,37,-77,]),'ID':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,46,47,49,52,54,56,58,61,63,64,65,66,67,69,70,71,74,84,89,90,91,92,93,94,95,99,102,113,114,117,119,121,123,125,126,127,135,136,138,142,143,144,145,157,165,172,179,180,181,183,184,186,],[-95,-95,-1,-2,19,19,-25,-39,-40,-41,-20,19,-36,-37,-44,-81,-26,19,-58,-45,-70,-71,-72,-73,-74,-59,-60,-61,-62,-63,-64,-65,-66,-67,-21,-12,19,19,-46,-55,-83,19,19,19,19,-96,-100,-101,-102,-58,-97,19,19,19,19,19,-103,19,19,19,19,19,19,19,19,19,19,-58,19,-112,-9,-10,-11,-91,19,19,19,-104,-113,-8,19,19,19,-95,-84,-23,-78,19,-77,]),'$end':([1,2,12,14,15,16,20,39,43,44,45,68,],[0,-24,-20,-36,-37,-44,-95,-21,-42,-98,-99,-38,]),'}':([14,15,16,56,59,60,61,62,63,64,65,66,69,90,114,120,121,122,123,125,126,127,135,143,144,145,165,172,173,178,179,180,181,183,184,185,186,],[-36,-37,-44,-95,68,-85,-92,-93,-96,-100,-101,-102,-97,-103,-95,143,-110,-111,-112,-9,-10,-11,-91,-104,-113,-8,-95,-95,179,180,-95,-84,-23,-78,-95,186,-77,]),'IF':([14,15,16,114,121,123,125,126,127,135,144,145,165,172,179,180,181,183,184,186,],[-36,-37,-44,133,133,-112,-9,-10,-11,-91,-113,-8,133,133,-95,-84,-23,-78,133,-77,]),'WHILE':([14,15,16,114,121,123,125,126,127,135,144,145,165,172,179,180,181,183,184,186,],[-36,-37,-44,134,134,-112,-9,-10,-11,-91,-113,-8,134,134,-95,-84,-23,-78,134,-77,]),'RETURN':([14,15,16,114,121,123,125,126,127,135,144,145,165,172,179,180,181,183,184,186,],[-36,-37,-44,138,138,-112,-9,-10,-11,-91,-113,-8,138,138,-95,-84,-23,-78,138,-77,]),'(':([14,15,16,18,19,50,67,70,74,81,91,92,93,94,95,99,100,113,114,117,119,121,123,125,126,127,133,134,135,138,142,144,145,157,165,172,179,180,181,183,184,186,],[-36,-37,-44,-89,-81,-90,71,74,74,99,74,74,74,74,74,74,113,74,74,74,-89,74,-112,-9,-10,-11,146,147,-91,74,74,-113,-8,74,74,74,-95,-84,-23,-78,74,-77,]),'DEC_LIT':([14,15,16,70,73,74,91,92,93,94,95,99,113,114,117,121,123,125,126,127,135,138,142,144,145,157,165,172,179,180,181,183,184,186,],[-36,-37,-44,76,96,76,76,76,76,76,76,76,76,76,76,76,-112,-9,-10,-11,-91,76,76,-113,-8,76,76,76,-95,-84,-23,-78,76,-77,]),'FLOAT_LIT':([14,15,16,70,73,74,91,92,93,94,95,99,113,114,117,121,123,125,126,127,135,138,142,144,145,157,165,172,179,180,181,183,184,186,],[-36,-37,-44,77,97,77,77,77,77,77,77,77,77,77,77,77,-112,-9,-10,-11,-91,77,77,-113,-8,77,77,77,-95,-84,-23,-78,77,-77,]),'STR_LIT':([14,15,16,70,74,91,92,93,94,95,99,113,114,117,121,123,125,126,127,135,138,142,144,145,157,165,172,179,180,181,183,184,186,],[-36,-37,-44,78,78,78,78,78,78,78,78,78,78,78,78,-112,-9,-10,-11,-91,78,78,-113,-8,78,78,78,-95,-84,-23,-78,78,-77,]),'CHAR_LIT':([14,15,16,70,74,91,92,93,94,95,99,113,114,117,121,123,125,126,127,135,138,142,144,145,157,165,172,179,180,181,183,184,186,],[-36,-37,-44,79,79,79,79,79,79,79,79,79,79,79,79,-112,-9,-10,-11,-91,79,79,-113,-8,79,79,79,-95,-84,-23,-78,79,-77,]),'-':([14,15,16,18,19,50,70,72,74,75,76,77,78,79,80,81,82,83,91,92,93,94,95,96,97,98,99,104,105,106,107,108,109,111,113,114,116,117,119,121,123,125,126,127,135,137,138,140,142,144,145,149,152,157,164,165,172,179,180,181,183,184,186,],[-36,-37,-44,-89,-81,-90,73,92,73,-19,-47,-48,-49,-50,-51,-52,-53,-54,73,73,73,73,73,-75,-76,92,73,-13,-14,-15,-16,92,-18,92,73,73,-82,73,-89,73,-112,-9,-10,-11,-91,92,73,-94,73,-113,-8,92,92,73,92,73,73,-95,-84,-23,-78,73,-77,]),'NEW':([14,15,16,70,74,91,92,93,94,95,99,113,114,117,121,123,125,126,127,135,138,142,144,145,157,165,172,179,180,181,183,184,186,],[-36,-37,-44,84,84,84,84,84,84,84,84,84,84,84,84,-112,-9,-10,-11,-91,84,84,-113,-8,84,84,84,-95,-84,-23,-78,84,-77,]),';':([17,18,19,40,50,72,75,76,77,78,79,80,81,82,83,96,97,104,105,106,107,108,109,116,119,124,128,129,130,131,132,137,138,140,148,149,150,151,152,164,],[41,-89,-81,49,-90,90,-19,-47,-48,-49,-50,-51,-52,-53,-54,-75,-76,-13,-14,-15,-16,-17,-18,-82,-89,145,-3,-4,-5,-6,-7,-43,-95,-94,-22,-56,-57,-68,-69,-27,]),'{':([18,19,50,51,53,55,57,101,158,163,182,],[-89,-81,-90,-95,56,-80,-79,114,165,172,184,]),'+':([18,19,50,72,75,76,77,78,79,80,81,82,83,96,97,98,104,105,106,107,108,109,111,116,119,137,140,141,149,152,164,],[-89,-81,-90,91,-19,-47,-48,-49,-50,-51,-52,-53,-54,-75,-76,91,-13,-14,-15,-16,91,-18,91,-82,141,91,-94,151,91,91,91,]),'*':([18,19,50,72,75,76,77,78,79,80,81,82,83,96,97,98,104,105,106,107,108,109,111,116,119,137,140,149,152,164,],[-89,-81,-90,93,-19,-47,-48,-49,-50,-51,-52,-53,-54,-75,-76,93,93,93,-15,-16,93,-18,93,-82,-89,93,-94,93,93,93,]),'/':([18,19,50,72,75,76,77,78,79,80,81,82,83,96,97,98,104,105,106,107,108,109,111,116,119,137,140,149,152,164,],[-89,-81,-90,94,-19,-47,-48,-49,-50,-51,-52,-53,-54,-75,-76,94,94,94,-15,-16,94,-18,94,-82,-89,94,-94,94,94,94,]),'%':([18,19,50,72,75,76,77,78,79,80,81,82,83,96,97,98,104,105,106,107,108,109,111,116,119,137,140,149,152,164,],[-89,-81,-90,95,-19,-47,-48,-49,-50,-51,-52,-53,-54,-75,-76,95,-13,-14,-15,-16,95,-18,95,-82,-89,95,-94,95,95,95,]),')':([18,19,50,71,75,76,77,78,79,80,81,82,83,85,86,87,88,96,97,98,99,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,139,140,153,154,155,156,168,170,174,175,176,177,],[-89,-81,-90,-95,-19,-47,-48,-49,-50,-51,-52,-53,-54,101,-105,-106,-107,-75,-76,109,-95,-109,-13,-14,-15,-16,-17,-18,116,-86,-88,-95,-108,-82,-95,140,-87,-94,158,-34,-35,163,-33,-32,-28,-29,-30,-31,]),',':([18,19,50,75,76,77,78,79,80,81,82,83,88,96,97,103,104,105,106,107,108,109,111,116,140,],[-89,-81,-90,-19,-47,-48,-49,-50,-51,-52,-53,-54,102,-75,-76,-109,-13,-14,-15,-16,-17,-18,117,-82,-94,]),'.':([18,19,119,],[42,-81,42,]),'[':([19,23,29,30,31,32,33,34,35,36,37,38,52,67,89,119,136,],[-81,-58,48,-59,-60,-61,-62,-63,-64,-65,-66,-67,-83,-58,48,-58,48,]),'CLASS':([19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,47,52,],[-81,46,-58,-45,-70,-71,-72,-73,-74,-59,-60,-61,-62,-63,-64,-65,-66,-67,-46,-83,]),'EXTENDS':([19,51,],[-81,54,]),'=':([19,67,148,153,154,155,156,159,160,161,162,168,170,174,175,176,177,],[-81,70,157,159,-34,-35,159,166,167,169,171,159,159,159,159,159,159,]),'INC':([19,119,],[-81,142,]),']':([48,],[52,]),'TRUE':([146,147,161,162,166,167,169,171,],[154,154,154,154,154,154,154,154,]),'FALSE':([146,147,161,162,166,167,169,171,],[155,155,155,155,155,155,155,155,]),'!':([153,154,155,156,168,170,174,175,176,177,],[160,-34,-35,160,160,160,160,160,160,160,]),'>':([153,154,155,156,168,170,174,175,176,177,],[161,-34,-35,161,161,161,161,161,161,161,]),'<':([153,154,155,156,168,170,174,175,176,177,],[162,-34,-35,162,162,162,162,162,162,162,]),'ELSE':([179,],[182,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'class_declaration_with_comments':([0,],[2,]),'package_statement_or_empty':([0,],[3,]),'package_statement':([0,],[4,]),'empty':([0,3,7,20,51,56,71,99,113,114,117,138,165,172,179,184,],[5,11,11,45,55,62,87,112,112,122,112,150,122,122,183,122,]),'pre_class_declaration_list':([3,],[7,]),'pre_class_declaration':([3,7,],[8,21,]),'comment_list':([3,7,12,20,],[9,9,39,44,]),'import_statement':([3,7,],[10,10,]),'comment':([3,7,12,20,56,61,114,121,165,172,184,],[12,12,12,12,66,66,135,135,135,135,135,]),'multi_line_comment':([3,7,12,20,56,61,114,121,165,172,184,],[15,15,15,15,15,15,15,15,15,15,15,]),'qualified_identifier':([6,13,42,54,70,74,84,91,92,93,94,95,99,113,114,117,121,138,142,157,165,172,184,],[17,40,50,57,81,81,100,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'identifier':([6,7,13,22,42,46,54,56,58,61,70,71,74,84,89,91,92,93,94,95,99,102,113,114,117,121,136,138,142,157,165,172,184,],[18,23,18,23,18,51,18,23,67,23,18,23,18,18,103,18,18,18,18,18,18,23,18,119,18,119,148,18,18,18,119,119,119,]),'class_declaration':([7,],[20,]),'class_modifier_list':([7,56,61,],[22,58,58,]),'class_modifier':([7,22,56,58,61,],[24,47,24,47,24,]),'variable_type':([7,22,56,58,61,71,102,114,121,165,172,184,],[29,29,29,29,29,89,89,136,136,136,136,136,]),'array_type':([7,22,56,58,61,71,102,114,121,165,172,184,],[38,38,38,38,38,38,38,38,38,38,38,38,]),'comment_list_or_empty':([20,],[43,]),'extends_or_empty':([51,],[53,]),'class_body':([56,],[59,]),'method_list_or_empty':([56,],[60,]),'method_list':([56,],[61,]),'method_or_comment':([56,61,],[63,69,]),'field':([56,61,],[64,64,]),'method':([56,61,],[65,65,]),'expression':([70,74,91,92,93,94,95,99,113,114,117,121,138,142,157,165,172,184,],[72,98,104,105,106,107,108,111,111,137,111,137,149,152,164,137,137,137,]),'factor':([70,74,91,92,93,94,95,99,113,114,117,121,138,142,157,165,172,184,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'unary_minus':([70,74,91,92,93,94,95,99,113,114,117,121,138,142,157,165,172,184,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'method_call':([70,74,91,92,93,94,95,99,113,114,117,121,138,142,157,165,172,184,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'new_statement':([70,74,91,92,93,94,95,99,113,114,117,121,138,142,157,165,172,184,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'parameter_list_or_empty':([71,],[85,]),'parameter_list':([71,102,],[86,115,]),'parameter_with_type':([71,102,],[88,88,]),'argument_list':([99,113,117,],[110,118,139,]),'statement_list_or_empty':([114,165,172,184,],[120,173,178,185,]),'statement_list':([114,165,172,184,],[121,121,121,121,]),'statement_with_semicolon_or_comment':([114,121,165,172,184,],[123,144,123,123,123,]),'statement_without_semicolon':([114,121,165,172,184,],[124,124,124,124,124,]),'if_statement':([114,121,165,172,184,],[125,125,125,125,125,]),'while_statement':([114,121,165,172,184,],[126,126,126,126,126,]),'comment_statement':([114,121,165,172,184,],[127,127,127,127,127,]),'variable_declaration':([114,121,165,172,184,],[128,128,128,128,128,]),'variable_initialization':([114,121,165,172,184,],[129,129,129,129,129,]),'expression_statement':([114,121,165,172,184,],[130,130,130,130,130,]),'return_statement':([114,121,165,172,184,],[131,131,131,131,131,]),'variable_increment':([114,121,165,172,184,],[132,132,132,132,132,]),'comparison_expression':([146,147,161,162,166,167,169,171,],[153,156,168,170,174,175,176,177,]),'else_statement_or_empty':([179,],[181,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('package_statement_or_empty -> package_statement','package_statement_or_empty',1,'p_package_statement_or_empty','pre_declaration.py',27),
  ('package_statement_or_empty -> empty','package_statement_or_empty',1,'p_package_statement_or_empty','pre_declaration.py',28),
  ('statement_without_semicolon -> variable_declaration','statement_without_semicolon',1,'p_statement_without_semicolon','statements_no_semicolon.py',28),
  ('statement_without_semicolon -> variable_initialization','statement_without_semicolon',1,'p_statement_without_semicolon','statements_no_semicolon.py',29),
  ('statement_without_semicolon -> expression_statement','statement_without_semicolon',1,'p_statement_without_semicolon','statements_no_semicolon.py',30),
  ('statement_without_semicolon -> return_statement','statement_without_semicolon',1,'p_statement_without_semicolon','statements_no_semicolon.py',31),
  ('statement_without_semicolon -> variable_increment','statement_without_semicolon',1,'p_statement_without_semicolon','statements_no_semicolon.py',32),
  ('statement_with_semicolon_or_comment -> statement_without_semicolon ;','statement_with_semicolon_or_comment',2,'p_statement_with_semicolon_or_comment','statements_semicolon.py',33),
  ('statement_with_semicolon_or_comment -> if_statement','statement_with_semicolon_or_comment',1,'p_statement_with_semicolon_or_comment','statements_semicolon.py',34),
  ('statement_with_semicolon_or_comment -> while_statement','statement_with_semicolon_or_comment',1,'p_statement_with_semicolon_or_comment','statements_semicolon.py',35),
  ('statement_with_semicolon_or_comment -> comment_statement','statement_with_semicolon_or_comment',1,'p_statement_with_semicolon_or_comment','statements_semicolon.py',36),
  ('package_statement -> PACKAGE qualified_identifier ;','package_statement',3,'p_package_statement','pre_declaration.py',36),
  ('expression -> expression + expression','expression',3,'p_expression','expressions.py',37),
  ('expression -> expression - expression','expression',3,'p_expression','expressions.py',38),
  ('expression -> expression * expression','expression',3,'p_expression','expressions.py',39),
  ('expression -> expression / expression','expression',3,'p_expression','expressions.py',40),
  ('expression -> expression % expression','expression',3,'p_expression','expressions.py',41),
  ('expression -> ( expression )','expression',3,'p_expression','expressions.py',42),
  ('expression -> factor','expression',1,'p_expression','expressions.py',43),
  ('comment_list -> comment','comment_list',1,'p_comment_list','misc.py',41),
  ('comment_list -> comment comment_list','comment_list',2,'p_comment_list','misc.py',42),
  ('variable_declaration -> variable_type identifier','variable_declaration',2,'p_variable_declaration','statements_no_semicolon.py',43),
  ('if_statement -> IF ( comparison_expression ) { statement_list_or_empty } else_statement_or_empty','if_statement',8,'p_if_statement','statements_semicolon.py',43),
  ('program -> class_declaration_with_comments','program',1,'p_program','main_parser.py',45),
  ('pre_class_declaration_list -> pre_class_declaration','pre_class_declaration_list',1,'p_pre_class_declaration_list','pre_declaration.py',45),
  ('pre_class_declaration_list -> pre_class_declaration_list pre_class_declaration','pre_class_declaration_list',2,'p_pre_class_declaration_list','pre_declaration.py',46),
  ('variable_initialization -> variable_type identifier = expression','variable_initialization',4,'p_variable_initialization','statements_no_semicolon.py',51),
  ('comparison_expression -> comparison_expression = = comparison_expression','comparison_expression',4,'p_comparison_expression','statements_semicolon.py',51),
  ('comparison_expression -> comparison_expression ! = comparison_expression','comparison_expression',4,'p_comparison_expression','statements_semicolon.py',52),
  ('comparison_expression -> comparison_expression > = comparison_expression','comparison_expression',4,'p_comparison_expression','statements_semicolon.py',53),
  ('comparison_expression -> comparison_expression < = comparison_expression','comparison_expression',4,'p_comparison_expression','statements_semicolon.py',54),
  ('comparison_expression -> comparison_expression < comparison_expression','comparison_expression',3,'p_comparison_expression','statements_semicolon.py',55),
  ('comparison_expression -> comparison_expression > comparison_expression','comparison_expression',3,'p_comparison_expression','statements_semicolon.py',56),
  ('comparison_expression -> TRUE','comparison_expression',1,'p_comparison_expression','statements_semicolon.py',57),
  ('comparison_expression -> FALSE','comparison_expression',1,'p_comparison_expression','statements_semicolon.py',58),
  ('comment -> SINGLE_LINE_COMMENT','comment',1,'p_comment','misc.py',53),
  ('comment -> multi_line_comment','comment',1,'p_comment','misc.py',54),
  ('class_declaration -> class_modifier_list CLASS identifier extends_or_empty { class_body }','class_declaration',7,'p_class_declaration','class_declaration.py',54),
  ('pre_class_declaration -> comment_list','pre_class_declaration',1,'p_pre_class_declaration','pre_declaration.py',59),
  ('pre_class_declaration -> import_statement','pre_class_declaration',1,'p_pre_class_declaration','pre_declaration.py',60),
  ('pre_class_declaration -> empty','pre_class_declaration',1,'p_pre_class_declaration','pre_declaration.py',61),
  ('class_declaration_with_comments -> package_statement_or_empty pre_class_declaration_list class_declaration comment_list_or_empty','class_declaration_with_comments',4,'p_class_declaration_with_comments','main_parser.py',61),
  ('expression_statement -> expression','expression_statement',1,'p_expression_statement','statements_no_semicolon.py',61),
  ('multi_line_comment -> MULTI_LINE_COMMENT','multi_line_comment',1,'p_multi_line_comment','misc.py',66),
  ('class_modifier_list -> class_modifier','class_modifier_list',1,'p_class_modifier_list','class_declaration.py',68),
  ('class_modifier_list -> class_modifier_list class_modifier','class_modifier_list',2,'p_class_modifier_list','class_declaration.py',69),
  ('factor -> DEC_LIT','factor',1,'p_factor','expressions.py',69),
  ('factor -> FLOAT_LIT','factor',1,'p_factor','expressions.py',70),
  ('factor -> STR_LIT','factor',1,'p_factor','expressions.py',71),
  ('factor -> CHAR_LIT','factor',1,'p_factor','expressions.py',72),
  ('factor -> unary_minus','factor',1,'p_factor','expressions.py',73),
  ('factor -> qualified_identifier','factor',1,'p_factor','expressions.py',74),
  ('factor -> method_call','factor',1,'p_factor','expressions.py',75),
  ('factor -> new_statement','factor',1,'p_factor','expressions.py',76),
  ('import_statement -> IMPORT qualified_identifier ;','import_statement',3,'p_import_statement','pre_declaration.py',69),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','statements_no_semicolon.py',69),
  ('return_statement -> RETURN empty','return_statement',2,'p_return_statement','statements_no_semicolon.py',70),
  ('variable_type -> identifier','variable_type',1,'p_variable_type','misc.py',77),
  ('variable_type -> BYTE','variable_type',1,'p_variable_type','misc.py',78),
  ('variable_type -> SHORT','variable_type',1,'p_variable_type','misc.py',79),
  ('variable_type -> CHAR','variable_type',1,'p_variable_type','misc.py',80),
  ('variable_type -> INT','variable_type',1,'p_variable_type','misc.py',81),
  ('variable_type -> LONG','variable_type',1,'p_variable_type','misc.py',82),
  ('variable_type -> FLOAT','variable_type',1,'p_variable_type','misc.py',83),
  ('variable_type -> DOUBLE','variable_type',1,'p_variable_type','misc.py',84),
  ('variable_type -> BOOLEAN','variable_type',1,'p_variable_type','misc.py',85),
  ('variable_type -> array_type','variable_type',1,'p_variable_type','misc.py',86),
  ('variable_increment -> identifier + +','variable_increment',3,'p_variable_increment','statements_no_semicolon.py',78),
  ('variable_increment -> identifier INC expression','variable_increment',3,'p_variable_increment','statements_no_semicolon.py',79),
  ('class_modifier -> PUBLIC','class_modifier',1,'p_class_modifier','class_declaration.py',79),
  ('class_modifier -> PRIVATE','class_modifier',1,'p_class_modifier','class_declaration.py',80),
  ('class_modifier -> VOID','class_modifier',1,'p_class_modifier','class_declaration.py',81),
  ('class_modifier -> STATIC','class_modifier',1,'p_class_modifier','class_declaration.py',82),
  ('class_modifier -> variable_type','class_modifier',1,'p_class_modifier','class_declaration.py',83),
  ('unary_minus -> - DEC_LIT','unary_minus',2,'p_unary_minus','expressions.py',87),
  ('unary_minus -> - FLOAT_LIT','unary_minus',2,'p_unary_minus','expressions.py',88),
  ('else_statement_or_empty -> ELSE { statement_list_or_empty }','else_statement_or_empty',4,'p_else_statement_or_empty','statements_semicolon.py',90),
  ('else_statement_or_empty -> empty','else_statement_or_empty',1,'p_else_statement_or_empty','statements_semicolon.py',91),
  ('extends_or_empty -> EXTENDS qualified_identifier','extends_or_empty',2,'p_extends_or_empty','class_declaration.py',93),
  ('extends_or_empty -> empty','extends_or_empty',1,'p_extends_or_empty','class_declaration.py',94),
  ('identifier -> ID','identifier',1,'p_identifier','misc.py',95),
  ('method_call -> qualified_identifier ( argument_list )','method_call',4,'p_method_call','expressions.py',97),
  ('array_type -> variable_type [ ]','array_type',3,'p_array_type','misc.py',103),
  ('while_statement -> WHILE ( comparison_expression ) { statement_list_or_empty }','while_statement',7,'p_while_statement','statements_semicolon.py',104),
  ('class_body -> method_list_or_empty','class_body',1,'p_class_body','class_declaration.py',105),
  ('argument_list -> expression','argument_list',1,'p_argument_list','expressions.py',105),
  ('argument_list -> expression , argument_list','argument_list',3,'p_argument_list','expressions.py',106),
  ('argument_list -> empty','argument_list',1,'p_argument_list','expressions.py',107),
  ('qualified_identifier -> identifier','qualified_identifier',1,'p_qualified_identifier','misc.py',111),
  ('qualified_identifier -> identifier . qualified_identifier','qualified_identifier',3,'p_qualified_identifier','misc.py',112),
  ('comment_statement -> comment','comment_statement',1,'p_comment_statement','statements_semicolon.py',112),
  ('method_list_or_empty -> method_list','method_list_or_empty',1,'p_method_list_or_empty','class_declaration.py',113),
  ('method_list_or_empty -> empty','method_list_or_empty',1,'p_method_list_or_empty','class_declaration.py',114),
  ('new_statement -> NEW qualified_identifier ( argument_list )','new_statement',5,'p_new_statement','expressions.py',120),
  ('empty -> <empty>','empty',0,'p_empty','misc.py',123),
  ('method_list -> method_or_comment','method_list',1,'p_method_list','class_declaration.py',125),
  ('method_list -> method_list method_or_comment','method_list',2,'p_method_list','class_declaration.py',126),
  ('comment_list_or_empty -> comment_list','comment_list_or_empty',1,'p_comment_list_or_empty','misc.py',131),
  ('comment_list_or_empty -> empty','comment_list_or_empty',1,'p_comment_list_or_empty','misc.py',132),
  ('method_or_comment -> field','method_or_comment',1,'p_method_or_comment','class_declaration.py',145),
  ('method_or_comment -> method','method_or_comment',1,'p_method_or_comment','class_declaration.py',146),
  ('method_or_comment -> comment','method_or_comment',1,'p_method_or_comment','class_declaration.py',147),
  ('field -> class_modifier_list identifier = expression ;','field',5,'p_field','class_declaration.py',159),
  ('method -> class_modifier_list identifier ( parameter_list_or_empty ) { statement_list_or_empty }','method',8,'p_method','class_declaration.py',167),
  ('parameter_list_or_empty -> parameter_list','parameter_list_or_empty',1,'p_parameter_list_or_empty','class_declaration.py',175),
  ('parameter_list_or_empty -> empty','parameter_list_or_empty',1,'p_parameter_list_or_empty','class_declaration.py',176),
  ('parameter_list -> parameter_with_type','parameter_list',1,'p_parameter_list','class_declaration.py',187),
  ('parameter_list -> parameter_with_type , parameter_list','parameter_list',3,'p_parameter_list','class_declaration.py',188),
  ('parameter_with_type -> variable_type identifier','parameter_with_type',2,'p_parameter_with_type','class_declaration.py',200),
  ('statement_list_or_empty -> statement_list','statement_list_or_empty',1,'p_statement_list_or_empty','class_declaration.py',208),
  ('statement_list_or_empty -> empty','statement_list_or_empty',1,'p_statement_list_or_empty','class_declaration.py',209),
  ('statement_list -> statement_with_semicolon_or_comment','statement_list',1,'p_statement_list','class_declaration.py',220),
  ('statement_list -> statement_list statement_with_semicolon_or_comment','statement_list',2,'p_statement_list','class_declaration.py',221),
]
