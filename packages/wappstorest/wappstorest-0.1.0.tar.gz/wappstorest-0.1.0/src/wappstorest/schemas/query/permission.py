# generated by datamodel-codegen:
#   filename:  <stdin>
#   timestamp: 2023-02-17T08:33:57+00:00

from __future__ import annotations

import uuid
from enum import Enum

from pydantic import BaseModel, Extra, Field, conint


class IdEnum(Enum):
    global_ = 'global'


class Permission(BaseModel):
    class Config:
        extra = Extra.forbid

    deeper: bool | None = None
    id: list[uuid.UUID | IdEnum] | None = None
    global_: bool | None = Field(None, alias='global')
    installation: bool | None = None
    propagate: bool | None = None
    temporary: bool | None = None
    expand: conint(ge=0, multiple_of=1) | None = None
    offset: conint(ge=0, multiple_of=1) | None = None
    limit: conint(ge=0, multiple_of=1) | None = None
    verbose: bool | list[str] | None = None
    prev_notification: uuid.UUID | None = None
