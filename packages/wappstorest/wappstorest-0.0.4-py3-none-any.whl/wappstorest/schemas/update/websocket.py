# generated by datamodel-codegen:
#   filename:  <stdin>
#   timestamp: 2023-02-17T08:38:03+00:00

from __future__ import annotations

import uuid
from enum import Enum

from pydantic import BaseModel, Extra, constr


class IdEnum(Enum):
    open = 'open'


class MetaItem(BaseModel):
    class Config:
        extra = Extra.allow

    id: uuid.UUID | IdEnum | None = None
    trace: str | None = None
    redirect: constr(regex=r'^[0-9a-zA-Z_-]+$', min_length=1, max_length=200) | None = None
    icon: str | None = None
    tag: list[constr(min_length=2, max_length=20)] | None = None
    tag_by_user: list[constr(min_length=2, max_length=20)] | None = None
    name_by_user: constr(max_length=100) | None = None


class Websocket(BaseModel):
    class Config:
        extra = Extra.forbid

    subscription: list[str] | None = None
    ignore: list[str] | None = None
    full: bool | None = None
    meta:  MetaItem | None = None
