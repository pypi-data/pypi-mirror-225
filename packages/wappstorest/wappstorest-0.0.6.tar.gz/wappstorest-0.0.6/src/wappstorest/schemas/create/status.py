# generated by datamodel-codegen:
#   filename:  <stdin>
#   timestamp: 2023-02-17T08:36:37+00:00

from __future__ import annotations

import uuid
import datetime
from enum import Enum
from typing import Any

from pydantic import BaseModel, Extra, Field, constr


class Level(Enum):
    important = 'important'
    error = 'error'
    warning = 'warning'
    info = 'info'
    debug = 'debug'


class Meta(BaseModel):
    class Config:
        extra = Extra.allow

    id: uuid.UUID | None = None
    trace: str | None = None
    redirect: constr(regex=r'^[0-9a-zA-Z_-]+$', min_length=1, max_length=200) | None = None
    icon: str | None = None
    tag: list[constr(min_length=2, max_length=20)] | None = None
    tag_by_user: list[constr(min_length=2, max_length=20)] | None = None
    name_by_user: constr(max_length=100) | None = None


class Status(BaseModel):
    class Config:
        extra = Extra.allow

    message: str
    timestamp: datetime.datetime | None = None
    data: str | None = None
    info: dict[str, Any] | None = None
    level: Level
    type: str
    meta: Meta | None = Field(None, title='meta-2.1')
