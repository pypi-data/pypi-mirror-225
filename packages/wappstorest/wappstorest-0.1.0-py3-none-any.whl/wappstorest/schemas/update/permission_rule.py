# generated by datamodel-codegen:
#   filename:  <stdin>
#   timestamp: 2023-02-17T08:34:05+00:00

from __future__ import annotations

import uuid
from enum import Enum
from typing import Any

from pydantic import BaseModel, Extra, Field, constr


class FromItem(BaseModel):
    class Config:
        extra = Extra.forbid

    type: str | None = None
    filter: list | None = None
    automatically_accept: bool | None = None


class ApplicationItem(BaseModel):
    class Config:
        extra = Extra.forbid

    sharing: bool | None = None
    permitted: list[uuid.UUID] | None = None


class MethodItem(BaseModel):
    create: bool | None = None
    update: bool | None = None
    retrieve: bool | None = None
    delete: bool | None = None


class StateItem(BaseModel):
    class Config:
        extra = Extra.forbid

    min_state: float | None = None
    max_state: float | None = None


class InstallationItem(BaseModel):
    class Config:
        extra = Extra.forbid

    shareable: bool | None = None


class FileItem(BaseModel):
    background: bool | None = None


class AclAttribute(Enum):
    parent_name = 'parent_name'


class RestrictionItem(BaseModel):
    class Config:
        extra = Extra.forbid

    child: str | None = None
    create: list[str] | None = None
    application:  ApplicationItem | None = None
    method:  MethodItem | None = None
    time: dict[str, Any] | None = None
    state:  StateItem | None = None
    installation:  InstallationItem | None = None
    file:  FileItem | None = None
    acl_attributes: list[AclAttribute] | None = None


class ToItem(BaseModel):
    class Config:
        extra = Extra.forbid

    type: str | None = None
    filter: list | None = None
    restriction:  RestrictionItem | None = None


class MetaItem(BaseModel):
    class Config:
        extra = Extra.allow

    id: uuid.UUID | None = None
    trace: str | None = None
    redirect: constr(regex=r'^[0-9a-zA-Z_-]+$', min_length=1, max_length=200) | None = None
    icon: str | None = None
    tag: list[constr(min_length=2, max_length=20)] | None = None
    tag_by_user: list[constr(min_length=2, max_length=20)] | None = None
    name_by_user: constr(max_length=100) | None = None


class PermissionRule(BaseModel):
    class Config:
        extra = Extra.forbid

    apply_to_old: bool | None = None
    from_: list[FromItem] | None = Field(None, alias='from')
    to: list[ToItem] | None = None
    meta:  MetaItem | None = None
