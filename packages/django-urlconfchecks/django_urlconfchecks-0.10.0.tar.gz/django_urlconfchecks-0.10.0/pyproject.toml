[tool]
[tool.poetry]
name = "django-urlconfchecks"
version = "0.10.0"
homepage = "https://github.com/AliSayyah/django-urlconfchecks"
description = "a python package for type checking the urls and associated views."
authors = ["ali sayyah <ali.sayyah2@gmail.com>"]
readme = "README.md"
license = "GPLv3"
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',
    'Natural Language :: English',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Framework :: Django :: 3.2',
    'Framework :: Django :: 4.0',
]
packages = [
    { include = "django_urlconfchecks" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.scripts]
urlconfchecks = "django_urlconfchecks.cli:app"

[tool.poetry.dependencies]
python = ">=3.7.0,<4"
Django = ">=3.2"
typer = { extras = ["all"], version = ">=0.4.1,<0.8.0" }

black = { version = ">=22.3.0", optional = true }
isort = { version = "^5.8.0", optional = true }
flake8 = { version = ">=4.0.1,<6.0.0", optional = true }
flake8-docstrings = { version = "^1.6.0", optional = true }
mypy = { version = ">=0.931,<1.2", optional = true }
pytest = { version = ">=6.2.4,<8.0.0", optional = true }
pytest-cov = { version = ">=3,<5", optional = true }
pytest-django = { version = "^4.5.2", optional = true }
tox = { version = "^3.20.1", optional = true }
virtualenv = { version = "^20.2.2", optional = true }
mkdocs = { version = "^1.1.2", optional = true }
mkdocs-include-markdown-plugin = { version = "^3.2.3", optional = true }
mkdocs-material = { version = "^8.1.8", optional = true }
mkdocstrings = { version = ">=0.17,<0.20", optional = true }
mkdocs-material-extensions = { version = "^1.0.1", optional = true }
twine = { version = "^4.0.1", optional = true }
mkdocs-autorefs = { version = ">=0.2.1,<0.5.0", optional = true }
pre-commit = { version = "^2.12.0", optional = true }
toml = { version = "^0.10.2", optional = true }
bump2version = { version = "^1.0.1", optional = true }
Markdown = { version = "^3.3.4", optional = true }

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "mypy",
    "flake8",
    "flake8-docstrings",
    "pytest-cov",
    "pytest-django",
    "pyupgrade",
]

dev = ["tox", "pre-commit", "virtualenv", "twine", "toml", "bump2version", 'Markdown']

doc = [
    'Markdown',
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extensions",
    "mkdocs-autorefs"
]

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
