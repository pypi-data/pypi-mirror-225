{"version":3,"file":"vendors-node_modules_react-tagsinput_react-tagsinput_js.899a06396cddd3091711.js","mappings":";;;;;;;;AAAA;AACA,MAAM,IAA0C;AAChD,IAAI,iCAAyB,CAAC,OAAS,EAAE,yEAAO,EAAE,2EAAY,CAAC,oCAAE,OAAO;AAAA;AAAA;AAAA,kGAAC;AACzE,IAAI,KAAK,YAQN;AACH,CAAC;AACD;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,oBAAoB,sBAAsB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA,wDAAwD;AACxD;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6DAA6D,gDAAgD;AAC7G;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV,0BAA0B,SAAS;AACnC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV,0BAA0B,UAAU;AACpC;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,wBAAwB,iBAAiB;AACzC;AACA,KAAK;AACL;AACA;AACA;;;AAGA,wBAAwB,kBAAkB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B;;AAE/B;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;;AAET;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,YAAY;AACZ;AACA,aAAa,0GAA0G;AACvH;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,6EAA6E;AAC7F;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://dataproc_jupyter_plugin/./node_modules/react-tagsinput/react-tagsinput.js"],"sourcesContent":["(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define('ReactTagsInput', ['exports', 'react', 'prop-types'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('react'), require('prop-types'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.React, global.propTypes);\n    global.ReactTagsInput = mod.exports;\n  }\n})(this, function (exports, _react, _propTypes) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _propTypes2 = _interopRequireDefault(_propTypes);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  function _objectWithoutProperties(obj, keys) {\n    var target = {};\n\n    for (var i in obj) {\n      if (keys.indexOf(i) >= 0) continue;\n      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n      target[i] = obj[i];\n    }\n\n    return target;\n  }\n\n  function uniq(arr) {\n    var out = [];\n\n    for (var i = 0; i < arr.length; i++) {\n      if (out.indexOf(arr[i]) === -1) {\n        out.push(typeof arr[i] === 'string' ? arr[i].trim() : arr[i]);\n      }\n    }\n\n    return out;\n  }\n\n  /* istanbul ignore next */\n  function getClipboardData(e) {\n    if (window.clipboardData) {\n      return window.clipboardData.getData('Text');\n    }\n\n    if (e.clipboardData) {\n      return e.clipboardData.getData('text/plain');\n    }\n\n    return '';\n  }\n\n  function defaultRenderTag(props) {\n    var tag = props.tag,\n        key = props.key,\n        disabled = props.disabled,\n        onRemove = props.onRemove,\n        classNameRemove = props.classNameRemove,\n        getTagDisplayValue = props.getTagDisplayValue,\n        other = _objectWithoutProperties(props, ['tag', 'key', 'disabled', 'onRemove', 'classNameRemove', 'getTagDisplayValue']);\n\n    return _react2.default.createElement(\n      'span',\n      _extends({ key: key }, other),\n      getTagDisplayValue(tag),\n      !disabled && _react2.default.createElement('a', { className: classNameRemove, onClick: function onClick(e) {\n          return onRemove(key);\n        } })\n    );\n  }\n\n  function defaultRenderInput(_ref) {\n    var addTag = _ref.addTag,\n        props = _objectWithoutProperties(_ref, ['addTag']);\n\n    var onChange = props.onChange,\n        value = props.value,\n        other = _objectWithoutProperties(props, ['onChange', 'value']);\n\n    return _react2.default.createElement('input', _extends({ type: 'text', onChange: onChange, value: value }, other));\n  }\n\n  function defaultRenderLayout(tagComponents, inputComponent) {\n    return _react2.default.createElement(\n      'span',\n      null,\n      tagComponents,\n      inputComponent\n    );\n  }\n\n  function defaultPasteSplit(data) {\n    return data.split(' ').map(function (d) {\n      return d.trim();\n    });\n  }\n\n  var defaultInputProps = {\n    className: 'react-tagsinput-input',\n    placeholder: 'Add a tag'\n  };\n\n  var TagsInput = function (_React$Component) {\n    _inherits(TagsInput, _React$Component);\n\n    /* istanbul ignore next */\n    function TagsInput() {\n      _classCallCheck(this, TagsInput);\n\n      var _this = _possibleConstructorReturn(this, (TagsInput.__proto__ || Object.getPrototypeOf(TagsInput)).call(this));\n\n      _this.state = { tag: '', isFocused: false };\n      _this.focus = _this.focus.bind(_this);\n      _this.blur = _this.blur.bind(_this);\n      _this.accept = _this.accept.bind(_this);\n      return _this;\n    }\n\n    _createClass(TagsInput, [{\n      key: '_getTagDisplayValue',\n      value: function _getTagDisplayValue(tag) {\n        var tagDisplayProp = this.props.tagDisplayProp;\n\n\n        if (tagDisplayProp) {\n          return tag[tagDisplayProp];\n        }\n\n        return tag;\n      }\n    }, {\n      key: '_makeTag',\n      value: function _makeTag(tag) {\n        var tagDisplayProp = this.props.tagDisplayProp;\n\n\n        if (tagDisplayProp) {\n          return _defineProperty({}, tagDisplayProp, tag);\n        }\n\n        return tag;\n      }\n    }, {\n      key: '_removeTag',\n      value: function _removeTag(index) {\n        var value = this.props.value.concat([]);\n        if (index > -1 && index < value.length) {\n          var changed = value.splice(index, 1);\n          this.props.onChange(value, changed, [index]);\n        }\n      }\n    }, {\n      key: '_clearInput',\n      value: function _clearInput() {\n        if (this.hasControlledInput()) {\n          this.props.onChangeInput('');\n        } else {\n          this.setState({ tag: '' });\n        }\n      }\n    }, {\n      key: '_tag',\n      value: function _tag() {\n        if (this.hasControlledInput()) {\n          return this.props.inputValue;\n        }\n\n        return this.state.tag;\n      }\n    }, {\n      key: '_addTags',\n      value: function _addTags(tags) {\n        var _this2 = this;\n\n        var _props = this.props,\n            onChange = _props.onChange,\n            onValidationReject = _props.onValidationReject,\n            onlyUnique = _props.onlyUnique,\n            maxTags = _props.maxTags,\n            value = _props.value;\n\n\n        if (onlyUnique) {\n          tags = uniq(tags);\n          tags = tags.filter(function (tag) {\n            return value.every(function (currentTag) {\n              return _this2._getTagDisplayValue(currentTag) !== _this2._getTagDisplayValue(tag);\n            });\n          });\n        }\n\n        var rejectedTags = tags.filter(function (tag) {\n          return !_this2._validate(_this2._getTagDisplayValue(tag));\n        });\n        tags = tags.filter(function (tag) {\n          return _this2._validate(_this2._getTagDisplayValue(tag));\n        });\n        tags = tags.filter(function (tag) {\n          var tagDisplayValue = _this2._getTagDisplayValue(tag);\n          if (typeof tagDisplayValue.trim === 'function') {\n            return tagDisplayValue.trim().length >= 0;\n          } else {\n            return tagDisplayValue;\n          }\n        });\n\n        if (maxTags >= 0) {\n          var remainingLimit = Math.max(maxTags - value.length, 0);\n          tags = tags.slice(0, remainingLimit);\n        }\n\n        if (onValidationReject && rejectedTags.length > 0) {\n          onValidationReject(rejectedTags);\n        }\n\n        if (tags.length > 0) {\n          var newValue = value.concat(tags);\n          var indexes = [];\n          for (var i = 0; i < tags.length; i++) {\n            indexes.push(value.length + i);\n          }\n          onChange(newValue, tags, indexes);\n          this._clearInput();\n          return true;\n        }\n\n        if (rejectedTags.length > 0) {\n          return false;\n        }\n\n        this._clearInput();\n        return false;\n      }\n    }, {\n      key: '_validate',\n      value: function _validate(tag) {\n        var _props2 = this.props,\n            validate = _props2.validate,\n            validationRegex = _props2.validationRegex;\n\n\n        return validate(tag) && validationRegex.test(tag);\n      }\n    }, {\n      key: '_shouldPreventDefaultEventOnAdd',\n      value: function _shouldPreventDefaultEventOnAdd(added, empty, key) {\n        if (added) {\n          return true;\n        }\n\n        if (key === 'Enter') {\n          return this.props.preventSubmit || !this.props.preventSubmit && !empty;\n        }\n\n        return false;\n      }\n    }, {\n      key: 'focus',\n      value: function focus() {\n        if (this.input && typeof this.input.focus === 'function') {\n          this.input.focus();\n        }\n\n        this.handleOnFocus();\n      }\n    }, {\n      key: 'blur',\n      value: function blur() {\n        if (this.input && typeof this.input.blur === 'function') {\n          this.input.blur();\n        }\n\n        this.handleOnBlur();\n      }\n    }, {\n      key: 'accept',\n      value: function accept() {\n        var preventSubmit = this.props.preventSubmit;\n\n        var tag = this._tag();\n        if (tag !== '' || !preventSubmit) {\n          tag = this._makeTag(tag);\n          return this._addTags([tag]);\n        }\n\n        return false;\n      }\n    }, {\n      key: 'addTag',\n      value: function addTag(tag) {\n        return this._addTags([tag]);\n      }\n    }, {\n      key: 'clearInput',\n      value: function clearInput() {\n        this._clearInput();\n      }\n    }, {\n      key: 'handlePaste',\n      value: function handlePaste(e) {\n        var _this3 = this;\n\n        var _props3 = this.props,\n            addOnPaste = _props3.addOnPaste,\n            pasteSplit = _props3.pasteSplit;\n\n\n        if (!addOnPaste) {\n          return;\n        }\n\n        e.preventDefault();\n\n        var data = getClipboardData(e);\n        var tags = pasteSplit(data).map(function (tag) {\n          return _this3._makeTag(tag);\n        });\n\n        this._addTags(tags);\n      }\n    }, {\n      key: 'handleKeyDown',\n      value: function handleKeyDown(e) {\n        if (e.defaultPrevented) {\n          return;\n        }\n\n        var _props4 = this.props,\n            value = _props4.value,\n            removeKeys = _props4.removeKeys,\n            addKeys = _props4.addKeys;\n\n        var tag = this._tag();\n        var empty = tag === '';\n        var keyCode = e.keyCode;\n        var key = e.key;\n        var add = addKeys.indexOf(keyCode) !== -1 || addKeys.indexOf(key) !== -1;\n        var remove = removeKeys.indexOf(keyCode) !== -1 || removeKeys.indexOf(key) !== -1;\n\n        if (add) {\n          var added = this.accept();\n          if (this._shouldPreventDefaultEventOnAdd(added, empty, key)) {\n            e.preventDefault();\n          }\n        }\n\n        if (remove && value.length > 0 && empty) {\n          e.preventDefault();\n          this._removeTag(value.length - 1);\n        }\n      }\n    }, {\n      key: 'handleClick',\n      value: function handleClick(e) {\n        var clickedElement = e.target;\n        var parentElement = e.target && e.target.parentElement;\n\n        if (clickedElement === this.div || parentElement === this.div) {\n          this.focus();\n        }\n      }\n    }, {\n      key: 'handleChange',\n      value: function handleChange(e) {\n        var onChangeInput = this.props.onChangeInput;\n        var onChange = this.props.inputProps.onChange;\n\n        var tag = e.target.value;\n\n        if (onChange) {\n          onChange(e);\n        }\n\n        if (this.hasControlledInput()) {\n          onChangeInput(tag);\n        } else {\n          this.setState({ tag: tag });\n        }\n      }\n    }, {\n      key: 'handleOnFocus',\n      value: function handleOnFocus(e) {\n        var onFocus = this.props.inputProps.onFocus;\n\n\n        if (onFocus) {\n          onFocus(e);\n        }\n\n        this.setState({ isFocused: true });\n      }\n    }, {\n      key: 'handleOnBlur',\n      value: function handleOnBlur(e) {\n        var onBlur = this.props.inputProps.onBlur;\n\n\n        this.setState({ isFocused: false });\n\n        if (e == null) {\n          return;\n        }\n\n        if (onBlur) {\n          onBlur(e);\n        }\n\n        if (this.props.addOnBlur && e.target.value) {\n          var tag = this._makeTag(e.target.value);\n          this._addTags([tag]);\n        }\n      }\n    }, {\n      key: 'handleRemove',\n      value: function handleRemove(tag) {\n        this._removeTag(tag);\n      }\n    }, {\n      key: 'inputProps',\n      value: function inputProps() {\n        var _props$inputProps = this.props.inputProps,\n            onChange = _props$inputProps.onChange,\n            onFocus = _props$inputProps.onFocus,\n            onBlur = _props$inputProps.onBlur,\n            otherInputProps = _objectWithoutProperties(_props$inputProps, ['onChange', 'onFocus', 'onBlur']);\n\n        var props = _extends({}, defaultInputProps, otherInputProps);\n\n        if (this.props.disabled) {\n          props.disabled = true;\n        }\n\n        return props;\n      }\n    }, {\n      key: 'inputValue',\n      value: function inputValue(props) {\n        return props.currentValue || props.inputValue || '';\n      }\n    }, {\n      key: 'hasControlledInput',\n      value: function hasControlledInput() {\n        var _props5 = this.props,\n            inputValue = _props5.inputValue,\n            onChangeInput = _props5.onChangeInput;\n\n\n        return typeof onChangeInput === 'function' && typeof inputValue === 'string';\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        if (this.hasControlledInput()) {\n          return;\n        }\n\n        this.setState({\n          tag: this.inputValue(this.props)\n        });\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate(prevProps) {\n        /* istanbul ignore next */\n        if (this.hasControlledInput()) {\n          return;\n        }\n\n        if (!this.inputValue(this.props)) {\n          return;\n        }\n\n        if (this.inputValue(prevProps) !== this.inputValue(this.props)) {\n          this.setState({\n            tag: this.inputValue(this.props)\n          });\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this4 = this;\n\n        var _props6 = this.props,\n            value = _props6.value,\n            tagProps = _props6.tagProps,\n            renderLayout = _props6.renderLayout,\n            renderTag = _props6.renderTag,\n            renderInput = _props6.renderInput,\n            className = _props6.className,\n            focusedClassName = _props6.focusedClassName,\n            disabled = _props6.disabled;\n        var isFocused = this.state.isFocused;\n\n\n        var tagComponents = value.map(function (tag, index) {\n          return renderTag(_extends({\n            key: index,\n            tag: tag,\n            onRemove: _this4.handleRemove.bind(_this4),\n            disabled: disabled,\n            getTagDisplayValue: _this4._getTagDisplayValue.bind(_this4)\n          }, tagProps));\n        });\n\n        var inputComponent = renderInput(_extends({\n          ref: function ref(r) {\n            _this4.input = r;\n          },\n          value: this._tag(),\n          onPaste: this.handlePaste.bind(this),\n          onKeyDown: this.handleKeyDown.bind(this),\n          onChange: this.handleChange.bind(this),\n          onFocus: this.handleOnFocus.bind(this),\n          onBlur: this.handleOnBlur.bind(this),\n          addTag: this.addTag.bind(this)\n        }, this.inputProps()));\n\n        return _react2.default.createElement(\n          'div',\n          { ref: function ref(r) {\n              _this4.div = r;\n            }, onClick: this.handleClick.bind(this), className: className + (isFocused ? ' ' + focusedClassName : '') },\n          renderLayout(tagComponents, inputComponent)\n        );\n      }\n    }]);\n\n    return TagsInput;\n  }(_react2.default.Component);\n\n  TagsInput.defaultProps = {\n    className: 'react-tagsinput',\n    focusedClassName: 'react-tagsinput--focused',\n    addKeys: ['Tab', 'Enter'],\n    addOnBlur: false,\n    addOnPaste: false,\n    inputProps: {},\n    removeKeys: ['Backspace'],\n    renderInput: defaultRenderInput,\n    renderTag: defaultRenderTag,\n    renderLayout: defaultRenderLayout,\n    pasteSplit: defaultPasteSplit,\n    tagProps: { className: 'react-tagsinput-tag', classNameRemove: 'react-tagsinput-remove' },\n    onlyUnique: false,\n    maxTags: -1,\n    validate: function validate() {\n      return true;\n    },\n    validationRegex: /.*/,\n    disabled: false,\n    tagDisplayProp: null,\n    preventSubmit: true\n  };\n  exports.default = TagsInput;\n  module.exports = exports.default;\n});\n\n"],"names":[],"sourceRoot":""}