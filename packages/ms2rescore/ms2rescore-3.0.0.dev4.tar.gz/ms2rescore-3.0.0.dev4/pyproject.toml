[project]
name = "ms2rescore"
description = "MSÂ²Rescore: Sensitive PSM rescoring with predicted MSÂ² peak intensities and retention times."
readme = "README.md"
license = {file = "LICENSE"}
keywords = [
    "MS2Rescore",
    "MS2PIP",
    "DeepLC",
    "Percolator",
    "proteomics",
    "mass spectrometry",
    "peptide identification",
    "rescoring",
    "machine learning",
]
authors = [
    {name = "Ralf Gabriels", email = "ralf@gabriels.dev"},
    {name = "Arthur Declercq", email = "arthur.declercq@ugent.be"},
    {name = "Ana SÃ­lvia C. Silva"},
    {name = "Robbin Bouwmeester"},
    {name = "Louise Buur"},
]
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Development Status :: 5 - Production/Stable",
]
dynamic = ["version"]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.16.0,<2",
    "pandas>=0.24.0,<3",  # TODO: Check compatibility
    "rich>=12",
    "pyteomics>=4.1.0,<5",
    "lxml>=4.5,<5",
    "ms2pip>=4.0.0-dev,<5",
    "click>=7",
    "cascade-config>=0.4.0,<2",
    "deeplc>=1.2.1",
    "deeplcretrainer==0.1.17",  # TODO: Release version pin
    "tomlkit",
    "psm_utils>=0.3",
    "customtkinter>=5,<6",
    "mokapot>=0.9",
]

[project.optional-dependencies]
dev = [
    "ruff",
    "black",
    "pytest",
    "pytest-cov"
]
doc = [
    "sphinx",
    "numpydoc>=1,<2",
    "recommonmark",
    "sphinx-mdinclude",
    "toml",
    "semver>=2",
    "sphinx_rtd_theme",
    "sphinx-autobuild",
]
plotting = [
    "matplotlib>=3",
    "seaborn>=0.11",
]

[project.urls]
GitHub = "https://github.com/compomics/ms2rescore"
ReadTheDocs = "https://ms2rescore.readthedocs.io"
PyPi = "https://pypi.org/project/ms2rescore/"
CompOmics = "https://www.compomics.com"

[project.scripts]
ms2rescore = "ms2rescore.__main__:main"
ms2rescore-gui = "ms2rescore.gui:main"
ms2rescore-plotting = "ms2rescore.plotting:main"

[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[tool.black]
line-length = 99
target-version = ['py38']

[tool.ruff]
line-length = 99
target-version = 'py38'
