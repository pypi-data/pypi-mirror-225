# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/langchain_ray',
                'doc_host': 'https://HamzaFarhan.github.io',
                'git_url': 'https://github.com/HamzaFarhan/langchain_ray',
                'lib_path': 'langchain_ray'},
  'syms': { 'langchain_ray.api.app': {},
            'langchain_ray.api.app_deployment': {},
            'langchain_ray.api.imports': {},
            'langchain_ray.chains': { 'langchain_ray.chains.RayChain': ('chains.html#raychain', 'langchain_ray/chains.py'),
                                      'langchain_ray.chains.RayChain.__call__': ( 'chains.html#raychain.__call__',
                                                                                  'langchain_ray/chains.py'),
                                      'langchain_ray.chains.RayChain.__init__': ( 'chains.html#raychain.__init__',
                                                                                  'langchain_ray/chains.py'),
                                      'langchain_ray.chains.add_str_to_docs_chain': ( 'chains.html#add_str_to_docs_chain',
                                                                                      'langchain_ray/chains.py'),
                                      'langchain_ray.chains.chain_fn': ('chains.html#chain_fn', 'langchain_ray/chains.py'),
                                      'langchain_ray.chains.chain_fn_args': ('chains.html#chain_fn_args', 'langchain_ray/chains.py'),
                                      'langchain_ray.chains.chainfn_input': ('chains.html#chainfn_input', 'langchain_ray/chains.py'),
                                      'langchain_ray.chains.chainfn_output': ('chains.html#chainfn_output', 'langchain_ray/chains.py'),
                                      'langchain_ray.chains.docs_to_json_chain': ( 'chains.html#docs_to_json_chain',
                                                                                   'langchain_ray/chains.py'),
                                      'langchain_ray.chains.noop_chain': ('chains.html#noop_chain', 'langchain_ray/chains.py'),
                                      'langchain_ray.chains.ray_chain': ('chains.html#ray_chain', 'langchain_ray/chains.py'),
                                      'langchain_ray.chains.ray_chain_fn': ('chains.html#ray_chain_fn', 'langchain_ray/chains.py'),
                                      'langchain_ray.chains.transform_chain': ('chains.html#transform_chain', 'langchain_ray/chains.py')},
            'langchain_ray.driver.ingress_driver': {},
            'langchain_ray.driver.redis_kv_store': {},
            'langchain_ray.imports': {},
            'langchain_ray.indexing.chains': { 'langchain_ray.indexing.chains.add_ems_to_docs_chain': ( 'indexing/indexing_chains.html#add_ems_to_docs_chain',
                                                                                                        'langchain_ray/indexing/chains.py'),
                                               'langchain_ray.indexing.chains.docs_to_faiss_chain': ( 'indexing/indexing_chains.html#docs_to_faiss_chain',
                                                                                                      'langchain_ray/indexing/chains.py'),
                                               'langchain_ray.indexing.chains.index_query_chain': ( 'indexing/indexing_chains.html#index_query_chain',
                                                                                                    'langchain_ray/indexing/chains.py'),
                                               'langchain_ray.indexing.chains.pdf_to_faiss_chain': ( 'indexing/indexing_chains.html#pdf_to_faiss_chain',
                                                                                                     'langchain_ray/indexing/chains.py')},
            'langchain_ray.indexing.utils': { 'langchain_ray.indexing.utils.add_ems_to_docs': ( 'indexing/indexing_utils.html#add_ems_to_docs',
                                                                                                'langchain_ray/indexing/utils.py'),
                                              'langchain_ray.indexing.utils.docs_to_ems': ( 'indexing/indexing_utils.html#docs_to_ems',
                                                                                            'langchain_ray/indexing/utils.py'),
                                              'langchain_ray.indexing.utils.docs_to_faiss': ( 'indexing/indexing_utils.html#docs_to_faiss',
                                                                                              'langchain_ray/indexing/utils.py'),
                                              'langchain_ray.indexing.utils.index_names': ( 'indexing/indexing_utils.html#index_names',
                                                                                            'langchain_ray/indexing/utils.py'),
                                              'langchain_ray.indexing.utils.search_faiss': ( 'indexing/indexing_utils.html#search_faiss',
                                                                                             'langchain_ray/indexing/utils.py')},
            'langchain_ray.ner.chains': { 'langchain_ray.ner.chains.add_ners_to_docs_chain': ( 'ner/ner_chains.html#add_ners_to_docs_chain',
                                                                                               'langchain_ray/ner/chains.py')},
            'langchain_ray.ner.utils': { 'langchain_ray.ner.utils.EduNER': ('ner/ner_utils.html#eduner', 'langchain_ray/ner/utils.py'),
                                         'langchain_ray.ner.utils.JobNER': ('ner/ner_utils.html#jobner', 'langchain_ray/ner/utils.py'),
                                         'langchain_ray.ner.utils.add_ners_to_docs': ( 'ner/ner_utils.html#add_ners_to_docs',
                                                                                       'langchain_ray/ner/utils.py'),
                                         'langchain_ray.ner.utils.docs_to_ners': ( 'ner/ner_utils.html#docs_to_ners',
                                                                                   'langchain_ray/ner/utils.py'),
                                         'langchain_ray.ner.utils.edu_ner': ('ner/ner_utils.html#edu_ner', 'langchain_ray/ner/utils.py'),
                                         'langchain_ray.ner.utils.job_ner': ('ner/ner_utils.html#job_ner', 'langchain_ray/ner/utils.py'),
                                         'langchain_ray.ner.utils.load_edu_model': ( 'ner/ner_utils.html#load_edu_model',
                                                                                     'langchain_ray/ner/utils.py'),
                                         'langchain_ray.ner.utils.load_job_model': ( 'ner/ner_utils.html#load_job_model',
                                                                                     'langchain_ray/ner/utils.py'),
                                         'langchain_ray.ner.utils.proc_ners': ( 'ner/ner_utils.html#proc_ners',
                                                                                'langchain_ray/ner/utils.py'),
                                         'langchain_ray.ner.utils.work_ner': ('ner/ner_utils.html#work_ner', 'langchain_ray/ner/utils.py')},
            'langchain_ray.pdf.chains': { 'langchain_ray.pdf.chains.add_cats_to_docs_chain': ( 'pdf/pdf_chains.html#add_cats_to_docs_chain',
                                                                                               'langchain_ray/pdf/chains.py'),
                                          'langchain_ray.pdf.chains.pdf_to_docs_chain': ( 'pdf/pdf_chains.html#pdf_to_docs_chain',
                                                                                          'langchain_ray/pdf/chains.py')},
            'langchain_ray.pdf.ner': { 'langchain_ray.pdf.ner.add_ners_to_docs': ( 'pdf/pdf_ner.html#add_ners_to_docs',
                                                                                   'langchain_ray/pdf/ner.py'),
                                       'langchain_ray.pdf.ner.docs_to_ners': ('pdf/pdf_ner.html#docs_to_ners', 'langchain_ray/pdf/ner.py'),
                                       'langchain_ray.pdf.ner.edu_ner': ('pdf/pdf_ner.html#edu_ner', 'langchain_ray/pdf/ner.py'),
                                       'langchain_ray.pdf.ner.job_ner': ('pdf/pdf_ner.html#job_ner', 'langchain_ray/pdf/ner.py'),
                                       'langchain_ray.pdf.ner.load_job_model': ( 'pdf/pdf_ner.html#load_job_model',
                                                                                 'langchain_ray/pdf/ner.py'),
                                       'langchain_ray.pdf.ner.load_ner_model': ( 'pdf/pdf_ner.html#load_ner_model',
                                                                                 'langchain_ray/pdf/ner.py'),
                                       'langchain_ray.pdf.ner.proc_ners': ('pdf/pdf_ner.html#proc_ners', 'langchain_ray/pdf/ner.py'),
                                       'langchain_ray.pdf.ner.work_ner': ('pdf/pdf_ner.html#work_ner', 'langchain_ray/pdf/ner.py')},
            'langchain_ray.pdf.utils': { 'langchain_ray.pdf.utils.add_cats_to_docs': ( 'pdf/pdf_utils.html#add_cats_to_docs',
                                                                                       'langchain_ray/pdf/utils.py'),
                                         'langchain_ray.pdf.utils.docs_to_cats': ( 'pdf/pdf_utils.html#docs_to_cats',
                                                                                   'langchain_ray/pdf/utils.py'),
                                         'langchain_ray.pdf.utils.pdf_docs': ('pdf/pdf_utils.html#pdf_docs', 'langchain_ray/pdf/utils.py'),
                                         'langchain_ray.pdf.utils.pdf_files': ( 'pdf/pdf_utils.html#pdf_files',
                                                                                'langchain_ray/pdf/utils.py'),
                                         'langchain_ray.pdf.utils.pdf_to_docs': ( 'pdf/pdf_utils.html#pdf_to_docs',
                                                                                  'langchain_ray/pdf/utils.py'),
                                         'langchain_ray.pdf.utils.text_cat': ('pdf/pdf_utils.html#text_cat', 'langchain_ray/pdf/utils.py')},
            'langchain_ray.remote_utils': { 'langchain_ray.remote_utils.bucket_count': ( 'remote_utils.html#bucket_count',
                                                                                         'langchain_ray/remote_utils.py'),
                                            'langchain_ray.remote_utils.bucket_del': ( 'remote_utils.html#bucket_del',
                                                                                       'langchain_ray/remote_utils.py'),
                                            'langchain_ray.remote_utils.bucket_dl': ( 'remote_utils.html#bucket_dl',
                                                                                      'langchain_ray/remote_utils.py'),
                                            'langchain_ray.remote_utils.bucket_move': ( 'remote_utils.html#bucket_move',
                                                                                        'langchain_ray/remote_utils.py'),
                                            'langchain_ray.remote_utils.bucket_up': ( 'remote_utils.html#bucket_up',
                                                                                      'langchain_ray/remote_utils.py'),
                                            'langchain_ray.remote_utils.gen_random_string': ( 'remote_utils.html#gen_random_string',
                                                                                              'langchain_ray/remote_utils.py'),
                                            'langchain_ray.remote_utils.get_local_path': ( 'remote_utils.html#get_local_path',
                                                                                           'langchain_ray/remote_utils.py'),
                                            'langchain_ray.remote_utils.gsutil_bucket': ( 'remote_utils.html#gsutil_bucket',
                                                                                          'langchain_ray/remote_utils.py'),
                                            'langchain_ray.remote_utils.gsutil_src': ( 'remote_utils.html#gsutil_src',
                                                                                       'langchain_ray/remote_utils.py'),
                                            'langchain_ray.remote_utils.handle_input_path': ( 'remote_utils.html#handle_input_path',
                                                                                              'langchain_ray/remote_utils.py'),
                                            'langchain_ray.remote_utils.is_bucket': ( 'remote_utils.html#is_bucket',
                                                                                      'langchain_ray/remote_utils.py')},
            'langchain_ray.utils': { 'langchain_ray.utils.add_docs_metadata': ('utils.html#add_docs_metadata', 'langchain_ray/utils.py'),
                                     'langchain_ray.utils.add_str_to_docs': ('utils.html#add_str_to_docs', 'langchain_ray/utils.py'),
                                     'langchain_ray.utils.bold_text': ('utils.html#bold_text', 'langchain_ray/utils.py'),
                                     'langchain_ray.utils.cid_to_char': ('utils.html#cid_to_char', 'langchain_ray/utils.py'),
                                     'langchain_ray.utils.docs_to_json': ('utils.html#docs_to_json', 'langchain_ray/utils.py'),
                                     'langchain_ray.utils.is_doc': ('utils.html#is_doc', 'langchain_ray/utils.py'),
                                     'langchain_ray.utils.is_nested_list': ('utils.html#is_nested_list', 'langchain_ray/utils.py'),
                                     'langchain_ray.utils.list_or_array': ('utils.html#list_or_array', 'langchain_ray/utils.py'),
                                     'langchain_ray.utils.nested_list': ('utils.html#nested_list', 'langchain_ray/utils.py'),
                                     'langchain_ray.utils.print_doc': ('utils.html#print_doc', 'langchain_ray/utils.py'),
                                     'langchain_ray.utils.proc_doc_text': ('utils.html#proc_doc_text', 'langchain_ray/utils.py'),
                                     'langchain_ray.utils.process_text': ('utils.html#process_text', 'langchain_ray/utils.py'),
                                     'langchain_ray.utils.unnest_list': ('utils.html#unnest_list', 'langchain_ray/utils.py')}}}
