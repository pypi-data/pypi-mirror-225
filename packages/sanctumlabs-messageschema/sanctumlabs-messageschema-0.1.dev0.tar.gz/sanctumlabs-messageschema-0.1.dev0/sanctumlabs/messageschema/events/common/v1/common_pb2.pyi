"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class ConnectionDetails(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONNECTION_TYPE_FIELD_NUMBER: builtins.int
    NETWORK_NAME_FIELD_NUMBER: builtins.int
    connection_type: builtins.str
    network_name: builtins.str
    def __init__(
        self,
        *,
        connection_type: builtins.str = ...,
        network_name: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_network_name", b"_network_name", "network_name", b"network_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_network_name", b"_network_name", "connection_type", b"connection_type", "network_name", b"network_name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network_name", b"_network_name"]) -> typing_extensions.Literal["network_name"] | None: ...

global___ConnectionDetails = ConnectionDetails

@typing_extensions.final
class Failure(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CODE_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    CATEGORY_FIELD_NUMBER: builtins.int
    code: builtins.str
    reason: builtins.str
    category: builtins.str
    def __init__(
        self,
        *,
        code: builtins.str = ...,
        reason: builtins.str = ...,
        category: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_category", b"_category", "category", b"category"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_category", b"_category", "category", b"category", "code", b"code", "reason", b"reason"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_category", b"_category"]) -> typing_extensions.Literal["category"] | None: ...

global___Failure = Failure
