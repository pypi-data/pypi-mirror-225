# License: MIT
# Copyright Â© 2023 Frequenz Energy-as-a-Service GmbH

[build-system]
requires = ["setuptools == 68.1.0", "setuptools_scm[toml] == 7.1.0"]
build-backend = "setuptools.build_meta"

[project]
name = "frequenz-repo-config"
description = "Frequenz repository setup tools and common configuration"
readme = "README.md"
license = { text = "MIT" }
keywords = [
  "config",
  "frequenz",
  "grpc",
  "lib",
  "library",
  "mkdocs",
  "nox",
  "project",
  "protobuf",
  "python",
  "repo-config",
  "repository",
  "setuptools",
  "tool",
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Software Development :: Libraries",
  "Typing :: Typed",
]
requires-python = ">= 3.11, < 4"
dependencies = ["nox >= 2022.11.21", "mkdocs-gen-files >= 0.4.0, < 0.6.0"]
dynamic = ["version"]

[[project.authors]]
name = "Frequenz Energy-as-a-Service GmbH"
email = "floss@frequenz.com"

[project.entry-points."distutils.commands"]
compile_proto = "frequenz.repo.config.setuptools.grpc_tools:CompileProto"

[project.optional-dependencies]
actor = []
api = [
  "grpcio-tools >= 1.47.0, < 2",
  "mypy-protobuf >= 3.0.0, < 4",
  "setuptools >= 67.6.0, < 69",
]
app = []
lib = []
model = []
extra-lint-examples = [
  "pylint >= 2.17.3, < 3",
  "pytest >= 7.3.0, < 8",
  "sybil >= 5.0.3, < 6",
]
dev-docstrings = [
  "pydocstyle == 6.3.0",
  "darglint == 1.8.1",
  "tomli == 2.0.1",      # Needed by pydocstyle to read pyproject.toml
]
dev-formatting = ["black == 23.7.0", "isort == 5.12.0"]
dev-mkdocs = [
  "mike == 1.1.2",
  "mkdocs-gen-files == 0.5.0",
  "mkdocs-literate-nav == 0.6.0",
  "mkdocs-material == 9.1.21",
  "mkdocs-section-index == 0.3.5",
  "mkdocstrings[python] == 0.22.0",
]
dev-mypy = [
  "mypy == 1.5.1",
  "types-setuptools >= 67.6.0, < 68", # Should match the global dependency
  # For checking the noxfile, docs/ script, and tests
  "frequenz-repo-config[dev-mkdocs,dev-noxfile,dev-pytest]",
]
dev-noxfile = ["nox == 2023.4.22"]
dev-pylint = [
  # dev-pytest already defines a dependency to pylint because of the examples
  # For checking the noxfile, docs/ script, and tests
  "frequenz-repo-config[dev-mkdocs,dev-noxfile,dev-pytest]",
]
dev-pytest = [
  "pytest == 7.4.0",
  "pylint == 2.17.3",      # We need this to check for the examples
  "cookiecutter == 2.1.1", # For checking the cookiecutter scripts
  "sybil == 5.0.3",        # Should be consistent with the extra-lint-examples dependency
]
dev = [
  "frequenz-repo-config[dev-mkdocs,dev-docstrings,dev-formatting,dev-mkdocs,dev-mypy,dev-noxfile,dev-pylint,dev-pytest]",
]

[project.urls]
Changelog = "https://github.com/frequenz-floss/frequenz-repo-config-python/releases"
Issues = "https://github.com/frequenz-floss/frequenz-repo-config-python/issues"
Repository = "https://github.com/frequenz-floss/frequenz-repo-config-python"
Support = "https://github.com/frequenz-floss/frequenz-repo-config-python/discussions/categories/support"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
src_paths = ["benchmarks", "examples", "src", "tests"]

[tool.pylint.similarities]
ignore-comments = ['yes']
ignore-docstrings = ['yes']
ignore-imports = ['no']
min-similarity-lines = 40

[tool.pylint.messages_control]
disable = [
  "too-few-public-methods",
  # disabled because it conflicts with isort
  "wrong-import-order",
  "ungrouped-imports",
  # pylint's unsubscriptable check is buggy and is not needed because
  # it is a type-check, for which we already have mypy.
  "unsubscriptable-object",
]

[[tool.mypy.overrides]]
module = ["cookiecutter", "cookiecutter.*", "sybil", "sybil.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["src", "tests"]
markers = [
  "integration: integration tests (deselect with '-m \"not integration\"')",
]

[tool.setuptools_scm]
version_scheme = "post-release"
