{"version":3,"file":"static/js/171.76650983.chunk.js","mappings":"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","sources":["../../ui-components/src/components/Alert.tsx","../../ui-components/src/components/CursorControls.tsx","../../ui-core/src/runs/RunListTabs.tsx","../../ui-core/src/hooks/usePortalSlot.tsx","../../ui-core/src/runs/RunsRoot.tsx","../../ui-core/src/runs/useCursorPaginatedQuery.tsx","../../ui-core/src/ui/Loading.tsx","../../ui-core/src/ui/StickyTableContainer.tsx","../../../node_modules/lodash/_arrayAggregator.js","../../../node_modules/lodash/_baseAggregator.js","../../../node_modules/lodash/_createAggregator.js","../../../node_modules/lodash/partition.js"],"sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {Group} from './Group';\nimport {IconName, Icon} from './Icon';\n\nexport type AlertIntent = 'info' | 'warning' | 'error' | 'success';\n\ninterface Props {\n  intent: AlertIntent;\n  title: React.ReactNode;\n  description?: React.ReactNode;\n  icon?: React.ReactNode;\n  onClose?: () => void;\n}\n\nexport const Alert: React.FC<Props> = (props) => {\n  const {intent, title, description, onClose} = props;\n\n  const {backgroundColor, borderColor, icon, iconColor, textColor} = React.useMemo(() => {\n    switch (intent) {\n      case 'warning':\n        return {\n          backgroundColor: Colors.Yellow50,\n          borderColor: Colors.Yellow500,\n          icon: 'warning',\n          iconColor: Colors.Yellow500,\n          textColor: Colors.Yellow700,\n        };\n      case 'error':\n        return {\n          backgroundColor: Colors.Red50,\n          borderColor: Colors.Red500,\n          icon: 'error',\n          iconColor: Colors.Red500,\n          textColor: Colors.Red700,\n        };\n      case 'success':\n        return {\n          backgroundColor: Colors.Green50,\n          borderColor: Colors.Green500,\n          icon: 'done',\n          iconColor: Colors.Green500,\n          textColor: Colors.Green700,\n        };\n      case 'info':\n      default:\n        return {\n          backgroundColor: Colors.Blue50,\n          borderColor: Colors.Blue500,\n          icon: 'info',\n          iconColor: Colors.Blue500,\n          textColor: Colors.Blue700,\n        };\n    }\n  }, [intent]);\n\n  return (\n    <AlertContainer\n      background={backgroundColor}\n      $borderColor={borderColor}\n      $textColor={textColor}\n      padding={{horizontal: 16, vertical: 12}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}}>\n        <Group direction=\"row\" spacing={12} alignItems=\"flex-start\">\n          {props.icon || <Icon name={icon as IconName} color={iconColor} />}\n          <Group direction=\"column\" spacing={8}>\n            <AlertTitle>{title}</AlertTitle>\n            {description ? <AlertDescription>{description}</AlertDescription> : null}\n          </Group>\n        </Group>\n        {!!onClose ? (\n          <ButtonWrapper onClick={onClose}>\n            <Icon name=\"close\" color={textColor} />\n          </ButtonWrapper>\n        ) : null}\n      </Box>\n    </AlertContainer>\n  );\n};\n\nAlert.defaultProps = {\n  intent: 'info',\n};\n\nconst ButtonWrapper = styled.button`\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  flex-direction: column;\n  height: fit-content;\n`;\n\nconst AlertContainer = styled(Box)<{$borderColor: string; $textColor: string}>`\n  box-shadow: inset 4px 0 ${({$borderColor}) => $borderColor};\n  color: ${({$textColor}) => $textColor};\n\n  a:link,\n  a:visited,\n  a:hover,\n  a:active {\n    color: ${({$textColor}) => $textColor};\n    text-decoration: underline;\n  }\n`;\n\nconst AlertTitle = styled.div`\n  font-weight: 600;\n`;\n\nconst AlertDescription = styled.div`\n  font-weight: 400;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport {Button} from './Button';\nimport {Icon} from './Icon';\n\nexport interface CursorPaginationProps {\n  hasPrevCursor: boolean;\n  hasNextCursor: boolean;\n  popCursor: () => void;\n  advanceCursor: () => void;\n  reset: () => void;\n}\n\nexport const CursorPaginationControls: React.FC<CursorPaginationProps> = ({\n  hasPrevCursor,\n  hasNextCursor,\n  popCursor,\n  advanceCursor,\n}) => {\n  return (\n    <CursorControlsContainer>\n      <Button disabled={!hasPrevCursor} icon={<Icon name=\"arrow_back\" />} onClick={popCursor}>\n        Previous\n      </Button>\n      <Button\n        disabled={!hasNextCursor}\n        rightIcon={<Icon name=\"arrow_forward\" />}\n        onClick={advanceCursor}\n      >\n        Next\n      </Button>\n    </CursorControlsContainer>\n  );\n};\n\nexport const CursorHistoryControls: React.FC<CursorPaginationProps> = ({\n  hasPrevCursor,\n  hasNextCursor,\n  popCursor,\n  advanceCursor,\n}) => {\n  return (\n    <CursorControlsContainer>\n      <Button icon={<Icon name=\"arrow_back\" />} disabled={!hasPrevCursor} onClick={popCursor}>\n        <span className=\"hideable-button-text\">Newer</span>\n      </Button>\n      <Button\n        rightIcon={<Icon name=\"arrow_forward\" />}\n        disabled={!hasNextCursor}\n        onClick={advanceCursor}\n      >\n        <span className=\"hideable-button-text\">Older</span>\n      </Button>\n    </CursorControlsContainer>\n  );\n};\n\nexport const CursorControlsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  margin-top: 16px;\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Colors, JoinedButtons, TokenizingFieldValue} from '@dagster-io/ui-components';\nimport isEqual from 'lodash/isEqual';\nimport * as React from 'react';\nimport {useLocation} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {RunStatus, RunsFilter} from '../graphql/types';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {AnchorButton} from '../ui/AnchorButton';\n\nimport {failedStatuses, inProgressStatuses, queuedStatuses} from './RunStatuses';\nimport {runsPathWithFilters, useQueryPersistedRunFilters} from './RunsFilterInput';\nimport {RunTabsCountQuery, RunTabsCountQueryVariables} from './types/RunListTabs.types';\n\nconst getDocumentTitle = (selected: ReturnType<typeof useSelectedRunsTab>) => {\n  switch (selected) {\n    case 'all':\n      return 'Runs | All runs';\n    case 'failed':\n      return 'Runs | Failed';\n    case 'in-progress':\n      return 'Runs | In progress';\n    case 'queued':\n      return 'Runs | Queued';\n    case 'scheduled':\n      return 'Runs | Scheduled';\n    default:\n      return 'Runs';\n  }\n};\n\nexport const useRunListTabs = (filter: RunsFilter = {}) => {\n  const queryResult = useQuery<RunTabsCountQuery, RunTabsCountQueryVariables>(\n    RUN_TABS_COUNT_QUERY,\n    {\n      variables: {\n        queuedFilter: {...filter, statuses: Array.from(queuedStatuses)},\n        inProgressFilter: {...filter, statuses: Array.from(inProgressStatuses)},\n      },\n    },\n  );\n\n  const {data: countData} = queryResult;\n  const {queuedCount, inProgressCount} = React.useMemo(() => {\n    return {\n      queuedCount:\n        countData?.queuedCount?.__typename === 'Runs' ? countData.queuedCount.count : null,\n      inProgressCount:\n        countData?.inProgressCount?.__typename === 'Runs' ? countData.inProgressCount.count : null,\n    };\n  }, [countData]);\n\n  const [filterTokens] = useQueryPersistedRunFilters();\n  const selectedTab = useSelectedRunsTab(filterTokens);\n\n  useDocumentTitle(getDocumentTitle(selectedTab));\n\n  const urlForStatus = (statuses: RunStatus[]) => {\n    const tokensMinusStatus = filterTokens.filter((token) => token.token !== 'status');\n    const statusTokens = statuses.map((status) => ({token: 'status' as const, value: status}));\n    return runsPathWithFilters([...statusTokens, ...tokensMinusStatus]);\n  };\n\n  const tabs = (\n    <JoinedButtons>\n      <ActivatableButton to={urlForStatus([])} id=\"all\" $active={selectedTab === 'all'}>\n        All runs\n      </ActivatableButton>\n      <ActivatableButton\n        to={urlForStatus(Array.from(queuedStatuses))}\n        id=\"queued\"\n        $active={selectedTab === 'queued'}\n      >\n        Queued ({queuedCount ?? 'indeterminate'})\n      </ActivatableButton>\n      <ActivatableButton\n        to={urlForStatus(Array.from(inProgressStatuses))}\n        id=\"in-progress\"\n        $active={selectedTab === 'in-progress'}\n      >\n        In progress ({inProgressCount ?? 'indeterminate'})\n      </ActivatableButton>\n      <ActivatableButton\n        to={urlForStatus(Array.from(failedStatuses))}\n        id=\"failed\"\n        $active={selectedTab === 'failed'}\n      >\n        Failed\n      </ActivatableButton>\n      <ActivatableButton\n        title=\"Scheduled\"\n        to=\"/runs/scheduled\"\n        id=\"scheduled\"\n        $active={selectedTab === 'scheduled'}\n      >\n        Scheduled\n      </ActivatableButton>\n    </JoinedButtons>\n  );\n\n  return {tabs, queryResult};\n};\n\nexport const ActivatableButton = styled(AnchorButton)<{$active: boolean}>`\n  ${(props) =>\n    props.$active &&\n    `\n    background: ${Colors.Gray200};\n  `}\n`;\n\nexport const useSelectedRunsTab = (filterTokens: TokenizingFieldValue[]) => {\n  const {pathname} = useLocation();\n  if (pathname === '/runs/timeline') {\n    return 'timeline';\n  }\n  if (pathname === '/runs/scheduled') {\n    return 'scheduled';\n  }\n  if (pathname === '/overview/backfills') {\n    return 'backfills';\n  }\n\n  const statusTokens = new Set(\n    filterTokens.filter((token) => token.token === 'status').map((token) => token.value),\n  );\n  if (isEqual(queuedStatuses, statusTokens)) {\n    return 'queued';\n  }\n  if (isEqual(inProgressStatuses, statusTokens)) {\n    return 'in-progress';\n  }\n  if (isEqual(failedStatuses, statusTokens)) {\n    return 'failed';\n  }\n  return 'all';\n};\n\nexport const RUN_TABS_COUNT_QUERY = gql`\n  query RunTabsCountQuery($queuedFilter: RunsFilter!, $inProgressFilter: RunsFilter!) {\n    queuedCount: pipelineRunsOrError(filter: $queuedFilter) {\n      ... on Runs {\n        count\n      }\n    }\n    inProgressCount: pipelineRunsOrError(filter: $inProgressFilter) {\n      ... on Runs {\n        count\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport {createPortal} from 'react-dom';\n\n/**\n * Allows you to move a component around in the tree without it losing its state.\n */\nexport function usePortalSlot(reactNode: React.ReactNode) {\n  const [targetEl, setTargetEl] = React.useState<HTMLDivElement | null>(null);\n\n  React.useLayoutEffect(() => {\n    setTargetEl((e) => (e === null ? document.createElement('div') : e));\n  }, []);\n\n  return [\n    targetEl ? createPortal(reactNode, targetEl) : null,\n    targetEl ? <DOMNodeHost node={targetEl} /> : null,\n  ];\n}\n\nfunction DOMNodeHost({node}: {node: HTMLElement}) {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  React.useLayoutEffect(() => {\n    const ownDiv = ref.current;\n    if (node.parentNode === ownDiv) {\n      return;\n    }\n    if (node.parentNode !== null && node.parentNode !== ownDiv) {\n      throw Error('Cannot render the same node twice');\n    }\n    ownDiv?.appendChild(node);\n    return () => {\n      ownDiv?.removeChild(node);\n    };\n  }, [node]);\n  return <div ref={ref} />;\n}\n","import {ApolloError, gql, useQuery} from '@apollo/client';\nimport {\n  Alert,\n  Box,\n  ButtonLink,\n  Colors,\n  CursorHistoryControls,\n  Heading,\n  NonIdealState,\n  Page,\n  PageHeader,\n  tokenToString,\n} from '@dagster-io/ui-components';\nimport partition from 'lodash/partition';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  useMergedRefresh,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {usePortalSlot} from '../hooks/usePortalSlot';\nimport {InstancePageContext} from '../instance/InstancePageContext';\nimport {useCanSeeConfig} from '../instance/useCanSeeConfig';\nimport {Loading} from '../ui/Loading';\nimport {StickyTableContainer} from '../ui/StickyTableContainer';\n\nimport {useRunListTabs, useSelectedRunsTab} from './RunListTabs';\nimport {RunTable, RUN_TABLE_RUN_FRAGMENT} from './RunTable';\nimport {RunsQueryRefetchContext} from './RunUtils';\nimport {\n  RunFilterTokenType,\n  runsFilterForSearchTokens,\n  useQueryPersistedRunFilters,\n  RunFilterToken,\n  useRunsFilterInput,\n} from './RunsFilterInput';\nimport {\n  QueueDaemonStatusQuery,\n  QueueDaemonStatusQueryVariables,\n  RunsRootQuery,\n  RunsRootQueryVariables,\n} from './types/RunsRoot.types';\nimport {useCursorPaginatedQuery} from './useCursorPaginatedQuery';\n\nconst PAGE_SIZE = 25;\n\nexport const RunsRoot = () => {\n  useTrackPageView();\n\n  const [filterTokens, setFilterTokens] = useQueryPersistedRunFilters();\n  const filter = runsFilterForSearchTokens(filterTokens);\n  const canSeeConfig = useCanSeeConfig();\n\n  const {queryResult, paginationProps} = useCursorPaginatedQuery<\n    RunsRootQuery,\n    RunsRootQueryVariables\n  >({\n    nextCursorForResult: (runs) => {\n      if (runs.pipelineRunsOrError.__typename !== 'Runs') {\n        return undefined;\n      }\n      return runs.pipelineRunsOrError.results[PAGE_SIZE - 1]?.id;\n    },\n    getResultArray: (data) => {\n      if (!data || data.pipelineRunsOrError.__typename !== 'Runs') {\n        return [];\n      }\n      return data.pipelineRunsOrError.results;\n    },\n    variables: {\n      filter,\n    },\n    query: RUNS_ROOT_QUERY,\n    pageSize: PAGE_SIZE,\n  });\n\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n\n  const currentTab = useSelectedRunsTab(filterTokens);\n  const staticStatusTags = currentTab !== 'all';\n  const [statusTokens, nonStatusTokens] = partition(\n    filterTokens,\n    (token) => token.token === 'status',\n  );\n\n  const setFilterTokensWithStatus = React.useCallback(\n    (tokens: RunFilterToken[]) => {\n      if (staticStatusTags) {\n        setFilterTokens([...statusTokens, ...tokens]);\n      } else {\n        setFilterTokens(tokens);\n      }\n    },\n    [setFilterTokens, staticStatusTags, statusTokens],\n  );\n\n  const onAddTag = React.useCallback(\n    (token: RunFilterToken) => {\n      const tokenAsString = tokenToString(token);\n      if (!nonStatusTokens.some((token) => tokenToString(token) === tokenAsString)) {\n        setFilterTokensWithStatus([...nonStatusTokens, token]);\n      }\n    },\n    [nonStatusTokens, setFilterTokensWithStatus],\n  );\n\n  const enabledFilters = React.useMemo(() => {\n    const filters: RunFilterTokenType[] = [\n      'tag',\n      'snapshotId',\n      'id',\n      'job',\n      'pipeline',\n      'backfill',\n    ];\n\n    if (!staticStatusTags) {\n      filters.push('status');\n    }\n\n    return filters;\n  }, [staticStatusTags]);\n\n  const mutableTokens = React.useMemo(() => {\n    if (staticStatusTags) {\n      return filterTokens.filter((token) => token.token !== 'status');\n    }\n    return filterTokens;\n  }, [filterTokens, staticStatusTags]);\n\n  const {tabs, queryResult: runQueryResult} = useRunListTabs(filter);\n  const countRefreshState = useQueryRefreshAtInterval(runQueryResult, FIFTEEN_SECONDS);\n  const combinedRefreshState = useMergedRefresh(countRefreshState, refreshState);\n\n  const {button, activeFiltersJsx} = useRunsFilterInput({\n    tokens: mutableTokens,\n    onChange: setFilterTokensWithStatus,\n    enabledFilters,\n  });\n\n  const [filtersPortal, filtersSlot] = usePortalSlot(button);\n\n  function actionBar() {\n    return (\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n        {tabs}\n        {filtersSlot}\n      </Box>\n    );\n  }\n\n  return (\n    <Page>\n      <PageHeader\n        title={<Heading>Runs</Heading>}\n        right={<QueryRefreshCountdown refreshState={combinedRefreshState} />}\n      />\n      {filtersPortal}\n      {currentTab === 'queued' && canSeeConfig ? (\n        <Box\n          flex={{direction: 'column', gap: 8}}\n          padding={{horizontal: 24, vertical: 16}}\n          border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n        >\n          <Alert\n            intent=\"info\"\n            title={<Link to=\"/config#run_coordinator\">View queue configuration</Link>}\n          />\n          <QueueDaemonAlert />\n        </Box>\n      ) : null}\n      <RunsQueryRefetchContext.Provider value={{refetch: queryResult.refetch}}>\n        <Loading\n          queryResult={queryResult}\n          allowStaleData\n          renderError={(error: ApolloError) => {\n            // In this case, a 400 is most likely due to invalid run filters, which are a GraphQL\n            // validation error but surfaced as a 400.\n            const badRequest = !!(\n              error?.networkError &&\n              'statusCode' in error.networkError &&\n              error.networkError.statusCode === 400\n            );\n            return (\n              <Box\n                flex={{direction: 'column', gap: 32}}\n                padding={{vertical: 8, left: 24, right: 12}}\n              >\n                {actionBar()}\n                <NonIdealState\n                  icon=\"warning\"\n                  title={badRequest ? 'Invalid run filters' : 'Unexpected error'}\n                  description={\n                    badRequest\n                      ? 'The specified run filters are not valid. Please check the filters and try again.'\n                      : 'An unexpected error occurred. Check the console for details.'\n                  }\n                />\n              </Box>\n            );\n          }}\n        >\n          {({pipelineRunsOrError}) => {\n            if (pipelineRunsOrError.__typename !== 'Runs') {\n              return (\n                <Box padding={{vertical: 64}}>\n                  <NonIdealState\n                    icon=\"error\"\n                    title=\"Query Error\"\n                    description={pipelineRunsOrError.message}\n                  />\n                </Box>\n              );\n            }\n\n            return (\n              <>\n                <StickyTableContainer $top={0}>\n                  <RunTable\n                    runs={pipelineRunsOrError.results.slice(0, PAGE_SIZE)}\n                    onAddTag={onAddTag}\n                    filter={filter}\n                    actionBarComponents={actionBar()}\n                    belowActionBarComponents={\n                      activeFiltersJsx.length ? (\n                        <>\n                          {activeFiltersJsx}\n                          <ButtonLink\n                            onClick={() => {\n                              setFilterTokensWithStatus([]);\n                            }}\n                          >\n                            Clear all\n                          </ButtonLink>\n                        </>\n                      ) : null\n                    }\n                  />\n                </StickyTableContainer>\n                {pipelineRunsOrError.results.length > 0 ? (\n                  <div style={{marginTop: '16px'}}>\n                    <CursorHistoryControls {...paginationProps} />\n                  </div>\n                ) : null}\n              </>\n            );\n          }}\n        </Loading>\n      </RunsQueryRefetchContext.Provider>\n    </Page>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default RunsRoot;\n\nexport const RUNS_ROOT_QUERY = gql`\n  query RunsRootQuery($limit: Int, $cursor: String, $filter: RunsFilter!) {\n    pipelineRunsOrError(limit: $limit, cursor: $cursor, filter: $filter) {\n      ... on Runs {\n        results {\n          id\n          ...RunTableRunFragment\n        }\n      }\n      ... on InvalidPipelineRunsFilterError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${RUN_TABLE_RUN_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst QueueDaemonAlert = () => {\n  const {data} = useQuery<QueueDaemonStatusQuery, QueueDaemonStatusQueryVariables>(\n    QUEUE_DAEMON_STATUS_QUERY,\n  );\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const status = data?.instance.daemonHealth.daemonStatus;\n  if (status?.required && !status?.healthy) {\n    return (\n      <Alert\n        intent=\"warning\"\n        title=\"The queued run coordinator is not healthy.\"\n        description={\n          <div>\n            View <Link to=\"/health\">{pageTitle}</Link> for details.\n          </div>\n        }\n      />\n    );\n  }\n  return null;\n};\n\nconst QUEUE_DAEMON_STATUS_QUERY = gql`\n  query QueueDaemonStatusQuery {\n    instance {\n      id\n      daemonHealth {\n        id\n        daemonStatus(daemonType: \"QUEUED_RUN_COORDINATOR\") {\n          id\n          daemonType\n          healthy\n          required\n        }\n      }\n    }\n  }\n`;\n","import {useQuery} from '@apollo/client';\nimport {CursorPaginationProps} from '@dagster-io/ui-components';\nimport {DocumentNode} from 'graphql';\nimport * as React from 'react';\n\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\n\ninterface CursorPaginationQueryVariables {\n  cursor?: string | null;\n  limit?: number | null;\n}\n\n/**\n * This is a React hook that makes it easier to build paginated list views based on a GraphQL\n * query. It is intended to be used in place of Apollo's `useQuery` and assumes that the query\n * takes at least `cursor` and `limit` variables. It manages those two variables internally,\n * and you can pass additional variables via the options.\n *\n * The current pagination \"cursor\" is saved to the URL query string, which allows the user to\n * navigate \"back\" in their browser history to move to previous pages.\n *\n * The returned paginationProps expose methods for moving to the next / previous page and are\n * used by <CursorPaginationControls /> to render the pagination buttons.\n */\nexport function useCursorPaginatedQuery<T, TVars extends CursorPaginationQueryVariables>(options: {\n  query: DocumentNode;\n  nextCursorForResult: (result: T) => string | undefined;\n  skip?: boolean;\n  variables: Omit<Omit<TVars, 'cusor'>, 'limit'>;\n  pageSize: number;\n  getResultArray: (result: T | undefined) => any[];\n}) {\n  const [cursorStack, setCursorStack] = React.useState<string[]>(() => []);\n  const [cursor, setCursor] = useQueryPersistedState<string | undefined>({queryKey: 'cursor'});\n\n  const queryVars: any = {\n    ...options.variables,\n    cursor,\n    limit: options.pageSize + 1,\n  };\n\n  const queryResult = useQuery<T, TVars>(options.query, {\n    skip: options.skip,\n    variables: queryVars,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const resultArray = options.getResultArray(queryResult.data);\n  const paginationProps: CursorPaginationProps = {\n    hasPrevCursor: !!cursor,\n    hasNextCursor: resultArray.length === options.pageSize + 1,\n    popCursor: () => {\n      const nextStack = [...cursorStack];\n      setCursor(nextStack.pop());\n      setCursorStack(nextStack);\n    },\n    advanceCursor: () => {\n      if (cursor) {\n        setCursorStack((current) => [...current, cursor]);\n      }\n      const nextCursor = queryResult.data && options.nextCursorForResult(queryResult.data);\n      if (!nextCursor) {\n        return;\n      }\n      setCursor(nextCursor);\n    },\n    reset: () => {\n      setCursorStack([]);\n      setCursor(undefined);\n    },\n  };\n\n  return {queryResult, paginationProps};\n}\n","import {ApolloError, QueryResult} from '@apollo/client';\nimport {Box, NonIdealState, Spinner} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {ERROR_CODES_TO_SURFACE, errorCodeToMessage} from '../app/HTTPErrorCodes';\n\ninterface ILoadingProps<TData> {\n  queryResult: QueryResult<TData, any>;\n  children: (data: TData) => React.ReactNode;\n  renderError?: (error: ApolloError) => React.ReactNode;\n  allowStaleData?: boolean;\n  purpose: 'section' | 'page';\n}\n\nconst BLANK_LOADING_DELAY_MSEC = 500;\n\nexport const Loading = <TData extends Record<string, any>>(props: ILoadingProps<TData>) => {\n  const {children, purpose, allowStaleData = false, renderError} = props;\n  const {error, data, loading} = props.queryResult;\n\n  const [blankLoading, setBlankLoading] = React.useState(true);\n  const isLoading = !data || (loading && !allowStaleData) || Object.keys(data as any).length === 0;\n\n  React.useEffect(() => {\n    let timer: ReturnType<typeof setTimeout> | undefined;\n\n    // Wait a brief moment so that we don't awkwardly flash the loading bar.\n    // This is often enough time for data to become available.\n    if (isLoading) {\n      timer = setTimeout(() => setBlankLoading(false), BLANK_LOADING_DELAY_MSEC);\n    } else {\n      setBlankLoading(true);\n    }\n\n    return () => {\n      timer && clearTimeout(timer);\n    };\n  }, [isLoading]);\n\n  // either error.networkError or error.graphQLErrors is set,\n  // so check that the error is not just a transient network error\n  if (error) {\n    if (renderError) {\n      return <>{renderError(error)}</>;\n    }\n\n    const {networkError} = error;\n    if (!networkError) {\n      return (\n        <Box padding={64} flex={{justifyContent: 'center'}}>\n          <NonIdealState icon=\"error\" title=\"GraphQL Error - see console for details\" />\n        </Box>\n      );\n    }\n\n    if ('statusCode' in networkError && ERROR_CODES_TO_SURFACE.has(networkError.statusCode)) {\n      const statusCode = networkError.statusCode;\n      return (\n        <Box padding={64} flex={{justifyContent: 'center'}}>\n          <NonIdealState\n            icon=\"error\"\n            title=\"Network error\"\n            description={errorCodeToMessage(statusCode)}\n          />\n        </Box>\n      );\n    }\n  }\n\n  if (isLoading) {\n    return blankLoading ? null : <LoadingSpinner purpose={purpose} />;\n  }\n\n  return <>{children(data as TData)}</>;\n};\n\nexport const LoadingSpinner: React.FC<{purpose: 'page' | 'section'}> = ({purpose}) => {\n  const isPage = purpose === 'page';\n  return (\n    <Box\n      padding={64}\n      flex={{\n        grow: isPage ? 1 : undefined,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n      style={isPage ? {height: '100%'} : undefined}\n    >\n      <Spinner purpose={purpose} />\n    </Box>\n  );\n};\n\nLoading.defaultProps = {\n  purpose: 'page',\n};\n","import {Colors} from '@dagster-io/ui-components';\nimport styled from 'styled-components';\n\ninterface Props {\n  $top?: number;\n}\n\n/**\n * Wrap a `Table` component with this to cause its `thead` to be sticky while scrolling.\n *\n * `$top` is the pixel value of the point in the scrolling container that the `thead`\n * should stick to. Probably `0`.\n */\nexport const StickyTableContainer = styled.div<Props>`\n  thead tr {\n    position: sticky;\n    top: ${({$top = 0}) => $top}px;\n    background-color: ${Colors.White};\n    z-index: 1;\n  }\n\n  /**\n   * Safari won't render a box-shadow on the \\`tr\\` and we don't want an inset\n   * box-shadow on \\`th\\` elements because it will create a double-border on the\n   * bottom of the \\`thead\\` in the non-stuck state.\n   *\n   * We therefore render an absoulutely-positioned keyline on the bottom of the\n   * \\`th\\` elements. This will appear as a border in the stuck state, and will\n   * overlap the top box-shadow of the first row in the non-stuck state.\n   */\n  thead tr th {\n    position: relative;\n  }\n\n  thead tr th::after {\n    content: '';\n    display: block;\n    height: 1px;\n    background-color: ${Colors.KeylineGray};\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    right: 0;\n  }\n`;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","var createAggregator = require('./_createAggregator');\n\n/**\n * Creates an array of elements split into two groups, the first of which\n * contains elements `predicate` returns truthy for, the second of which\n * contains elements `predicate` returns falsey for. The predicate is\n * invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of grouped elements.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': false },\n *   { 'user': 'fred',    'age': 40, 'active': true },\n *   { 'user': 'pebbles', 'age': 1,  'active': false }\n * ];\n *\n * _.partition(users, function(o) { return o.active; });\n * // => objects for [['fred'], ['barney', 'pebbles']]\n *\n * // The `_.matches` iteratee shorthand.\n * _.partition(users, { 'age': 1, 'active': false });\n * // => objects for [['pebbles'], ['barney', 'fred']]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.partition(users, ['active', false]);\n * // => objects for [['barney', 'pebbles'], ['fred']]\n *\n * // The `_.property` iteratee shorthand.\n * _.partition(users, 'active');\n * // => objects for [['fred'], ['barney', 'pebbles']]\n */\nvar partition = createAggregator(function(result, value, key) {\n  result[key ? 0 : 1].push(value);\n}, function() { return [[], []]; });\n\nmodule.exports = partition;\n"],"names":["Alert","props","intent","title","description","onClose","_React$useMemo","React","backgroundColor","Colors","Yellow50","borderColor","Yellow500","icon","iconColor","textColor","Yellow700","Red50","Red500","Red700","Green50","Green500","Green700","Blue50","Blue500","Blue700","_jsx","AlertContainer","background","$borderColor","$textColor","padding","horizontal","vertical","children","_jsxs","Box","flex","direction","justifyContent","Group","spacing","alignItems","Icon","name","color","AlertTitle","AlertDescription","ButtonWrapper","onClick","defaultProps","styled","button","_templateObject","_taggedTemplateLiteral","_templateObject2","_ref","_ref2","_ref3","div","_templateObject3","_templateObject4","CursorPaginationControls","hasPrevCursor","hasNextCursor","popCursor","advanceCursor","CursorControlsContainer","Button","disabled","rightIcon","CursorHistoryControls","className","useRunListTabs","filter","arguments","length","undefined","queryResult","useQuery","RUN_TABS_COUNT_QUERY","variables","queuedFilter","_objectSpread","statuses","Array","from","queuedStatuses","inProgressFilter","inProgressStatuses","countData","data","_countData$queuedCoun","_countData$inProgress","queuedCount","__typename","count","inProgressCount","_useQueryPersistedRun","useQueryPersistedRunFilters","filterTokens","_slicedToArray","selectedTab","useSelectedRunsTab","useDocumentTitle","selected","getDocumentTitle","urlForStatus","tokensMinusStatus","token","statusTokens","map","status","value","runsPathWithFilters","concat","_toConsumableArray","tabs","JoinedButtons","ActivatableButton","to","id","$active","failedStatuses","AnchorButton","Gray200","pathname","useLocation","Set","isEqual","gql","DOMNodeHost","node","ref","ownDiv","current","parentNode","Error","appendChild","removeChild","RunsRoot","useTrackPageView","_useQueryPersistedRun2","setFilterTokens","runsFilterForSearchTokens","canSeeConfig","useCanSeeConfig","_useCursorPaginatedQu","useCursorPaginatedQuery","nextCursorForResult","runs","_runs$pipelineRunsOrE","pipelineRunsOrError","results","PAGE_SIZE","getResultArray","query","RUNS_ROOT_QUERY","pageSize","paginationProps","refreshState","useQueryRefreshAtInterval","FIFTEEN_SECONDS","currentTab","staticStatusTags","_partition","partition","_partition2","nonStatusTokens","setFilterTokensWithStatus","tokens","onAddTag","tokenAsString","tokenToString","some","enabledFilters","filters","push","mutableTokens","_useRunListTabs","runQueryResult","countRefreshState","combinedRefreshState","useMergedRefresh","_useRunsFilterInput","useRunsFilterInput","onChange","activeFiltersJsx","_usePortalSlot","reactNode","_React$useState","_React$useState2","targetEl","setTargetEl","e","document","createElement","createPortal","usePortalSlot","_usePortalSlot2","filtersPortal","filtersSlot","actionBar","gap","Page","PageHeader","Heading","right","QueryRefreshCountdown","border","side","width","KeylineGray","Link","QueueDaemonAlert","RunsQueryRefetchContext","Provider","refetch","Loading","allowStaleData","renderError","error","badRequest","networkError","statusCode","left","NonIdealState","message","_Fragment","StickyTableContainer","$top","RunTable","slice","actionBarComponents","belowActionBarComponents","ButtonLink","style","marginTop","RUN_TABLE_RUN_FRAGMENT","PYTHON_ERROR_FRAGMENT","QUEUE_DAEMON_STATUS_QUERY","pageTitle","InstancePageContext","instance","daemonHealth","daemonStatus","required","healthy","options","cursorStack","setCursorStack","_useQueryPersistedSta","useQueryPersistedState","queryKey","_useQueryPersistedSta2","cursor","setCursor","queryVars","limit","skip","notifyOnNetworkStatusChange","resultArray","nextStack","pop","nextCursor","reset","purpose","_props$allowStaleData","_props$queryResult","loading","blankLoading","setBlankLoading","isLoading","Object","keys","timer","setTimeout","clearTimeout","ERROR_CODES_TO_SURFACE","has","errorCodeToMessage","LoadingSpinner","isPage","grow","height","Spinner","_ref$$top","White","module","exports","array","setter","iteratee","accumulator","index","baseEach","require","collection","key","arrayAggregator","baseAggregator","baseIteratee","isArray","initializer","func","createAggregator","result"],"sourceRoot":""}