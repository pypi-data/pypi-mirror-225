{"version":3,"file":"static/js/48.70491e00.chunk.js","mappings":"uOAiBaA,EAAa,SAACC,GACzB,IAAOC,EAA4BD,EAA5BC,MAAOC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,MAAOC,EAAQJ,EAARI,KAC3B,OACEC,EAAAA,EAAAA,MAACC,EAAmB,CAClBC,WAAYC,EAAAA,EAAOC,OACnBC,QAAS,CAACC,IAAK,GAAIC,KAAM,GAAIT,MAAO,IACpCU,OAAQ,CAACC,KAAM,SAAUC,MAAO,EAAGC,MAAOR,EAAAA,EAAOS,aAAaC,SAAA,EAE9Db,EAAAA,EAAAA,MAACc,EAAAA,EAAG,CAACC,KAAM,CAACC,UAAW,MAAOC,eAAgB,iBAAkBZ,QAAS,CAACa,OAAQ,IAAIL,SAAA,EACpFb,EAAAA,EAAAA,MAACc,EAAAA,EAAG,CAACC,KAAM,CAACC,UAAW,MAAOG,WAAY,aAAcC,IAAK,GAAIC,KAAM,QAAQR,SAAA,CAC5EjB,EACAC,KAEFC,KAEFC,IAGP,EAEME,GAAsBqB,EAAAA,EAAAA,IAAOR,EAAAA,EAAPQ,CAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sJ,yTCrB1BC,EAAkB,SAAC9B,GAC9B,IAAO+B,EAAsB/B,EAAtB+B,SAAUC,EAAYhC,EAAZgC,SACjB,MAAO,CACLC,KAAM,MACNC,SAAUF,GAAY,EAAI,EAC1B,gBAAiBA,EACjB,gBAAiBD,EACjB,gBAAiBA,EAErB,EAEaI,EAAgB,SAACnC,GAC5B,IAAOC,EAAsBD,EAAtBC,MAAOmC,EAAepC,EAAfoC,MAAOC,EAAQrC,EAARqC,KACrB,OACEhC,EAAAA,EAAAA,MAAAiC,EAAAA,SAAA,CAAApB,SAAA,CACGjB,EACAoC,OACUE,IAAVH,GAAsBI,EAAAA,EAAAA,KAACC,EAAK,CAAAvB,SAAY,kBAAVkB,EAA4B,SAAMA,IAAiB,OAGxF,EAEMK,EAAQd,EAAAA,GAAOe,IAAGd,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4KAEPc,EAAAA,EAAWC,UAKjBpC,EAAAA,EAAOqC,QACFrC,EAAAA,EAAOsC,SAGVC,GAASC,EAAAA,EAAAA,IAAGC,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,0pBAMZ,SAAAqB,GAAO,MAAiB,UAAjBA,EAALC,MAAgC,SAAW,QAAQ,IAClD,SAAAC,GAAU,OAAAA,EAARrB,SAA0BvB,EAAAA,EAAO6C,QAAU,aAAa,IAU7D,SAAAC,GAAA,IAAEvB,EAAQuB,EAARvB,SAAUC,EAAQsB,EAARtB,SAAQ,OAC3BD,EAAWvB,EAAAA,EAAO6C,QAAUrB,EAAWxB,EAAAA,EAAO+C,QAAU/C,EAAAA,EAAOgD,OAAO,GAGtEC,EAAAA,IACY,SAAAC,GAAA,IAAE3B,EAAQ2B,EAAR3B,SAAUC,EAAQ0B,EAAR1B,SAAQ,OAChCD,EAAWvB,EAAAA,EAAO6C,QAAUrB,EAAWxB,EAAAA,EAAO+C,QAAU,EAAE,IAM9C,SAAAI,GAAA,IAAE5B,EAAQ4B,EAAR5B,SAAUC,EAAQ2B,EAAR3B,SAAQ,OAC9BD,EAAWvB,EAAAA,EAAO6C,QAAUrB,EAAW,cAAgBxB,EAAAA,EAAOoD,OAAO,IAQ9D,SAAAC,GAAA,IAAE9B,EAAQ8B,EAAR9B,SAAUC,EAAQ6B,EAAR7B,SAAQ,OAC3BD,EAAWvB,EAAAA,EAAOsD,QAAU9B,EAAWxB,EAAAA,EAAO+C,QAAU/C,EAAAA,EAAOsD,OAAO,GAExEL,EAAAA,IACS,SAAAM,GAAA,IAAEhC,EAAQgC,EAARhC,SAAUC,EAAQ+B,EAAR/B,SAAQ,OAC3BD,EAAWvB,EAAAA,EAAOsD,QAAU9B,EAAWxB,EAAAA,EAAO+C,QAAU,EAAE,IAOrDS,GAAMrC,EAAAA,EAAAA,KAAO,SAAC3B,GACzB,IAAMiE,EAAiBnC,EAAgB9B,GACjCkE,EAAU/B,EAAcnC,GAExBmE,EAAmC,kBAAhBnE,EAAMC,MAAqBD,EAAMC,WAAQsC,EAElE,OACEC,EAAAA,EAAAA,KAAA,UAAA4B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYpE,GAAWiE,GAAc,IAAEhE,MAAOkE,EAAWE,KAAK,SAAQnD,SACnEgD,IAGP,GAXmBvC,CAWjB2C,IAAAA,GAAAzC,EAAAA,EAAAA,GAAA,gBACEkB,GAUSwB,GAAO5C,EAAAA,EAAAA,KAAO,SAAA6C,GAAmE,IAAjEC,EAAaD,EAAbC,cAAevD,EAAQsD,EAARtD,SAAUwD,EAAQF,EAARE,SAAQC,EAAAH,EAAEI,KAAAA,OAAI,IAAAD,EAAG,QAAOA,EAAKE,GAAIC,EAAAA,EAAAA,GAAAN,EAAAO,GACrF,OACEvC,EAAAA,EAAAA,KAAA,OAAA4B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAASS,GAAI,IAAE5C,KAAK,UAASf,SAC1B8D,EAAAA,SAAeC,IAAI/D,GAAU,SAACgE,GAAK,OAClCA,EACIF,EAAAA,aAAmBE,GAAKd,EAAAA,EAAAA,GAAA,CACtBrC,SAAUmD,EAAMlF,MAAM+B,UAAYmD,EAAMlF,MAAMmF,KAAOV,EACrDtB,MAAOyB,GACHF,EACA,CACEU,QAAS,kBAAMV,EAASQ,EAAMlF,MAAMmF,GAAG,GAEzC,CAAC,IAEP,IAAI,MAIhB,GAlBoBxD,CAkBlB0D,IAAAA,GAAAxD,EAAAA,EAAAA,GAAA,uGAGa,SAAAyD,GAAM,MAAgB,UAAhBA,EAAJV,KAA8B,OAAS,MAAM,IAC7C,SAAAW,GAAM,MAAgB,UAAhBA,EAAJX,KAA8B,OAAS,MAAM,G,qUCtH1DY,GAAsBC,EAAAA,EAAAA,IAAiB7D,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iPAEnBrB,EAAAA,EAAOS,YAMPT,EAAAA,EAAOkF,WAIpBC,EAAiBX,EAAAA,MAAW,YACvCY,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,GAAiB,iBAEjB,IAAOC,EAAad,EAAAA,WAAiBe,EAAAA,GAA9BD,UACDE,GAAcC,EAAAA,EAAAA,GAClBC,EACA,CACEC,6BAA6B,IAI3BC,GAAeC,EAAAA,EAAAA,IAA0BL,EAAaM,EAAAA,IACrDC,EAAQP,EAARO,KACDC,EAAa,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAME,SAASC,KAe9B,OAAKH,GASHlG,EAAAA,EAAAA,MAAAiC,EAAAA,SAAA,CAAApB,SAAA,EACEsB,EAAAA,EAAAA,KAACgD,EAAmB,KACpBhD,EAAAA,EAAAA,KAACzC,EAAAA,EAAU,CACTE,OAAOuC,EAAAA,EAAAA,KAACmE,EAAAA,GAAO,CAAAzF,SAAE4E,IACjB1F,MAAMoC,EAAAA,EAAAA,KAACoE,EAAAA,EAAY,CAACC,IAAI,SAAST,aAAcA,OAEjD5D,EAAAA,EAAAA,KAACrB,EAAAA,EAAG,CACFT,QAAS,CAACoG,SAAU,GAAIC,WAAY,IACpClG,OAAQ,CAACC,KAAM,SAAUC,MAAO,EAAGC,MAAOR,EAAAA,EAAOS,aAAaC,UAE9Db,EAAAA,EAAAA,MAAC2G,EAAAA,GAAU,CAAA9F,SAAA,CAAC,qBACOsB,EAAAA,EAAAA,KAACyE,EAAAA,GAAI,CAACC,MAAO,CAACC,SAAU,QAAQjG,SAAEqF,EAAKa,gBAG5D5E,EAAAA,EAAAA,KAAC6E,EAAAA,GAAwB,CACvBC,eArCmB,SAACC,GACxB,IAAMC,EAAeC,SAASC,SAASC,KACvC,GAAIH,EAAc,CAChB,IAAMI,EAAS,IAAIC,OAAO,IAADC,OAAKN,EAAaO,MAAM,GAAE,MAC7CC,EAAST,EAAOU,gBAAgBL,GACxBI,EAAOE,aAEnBX,EAAOY,SAASH,EAAOI,OAAQJ,EAAOK,KAAM,CAACC,UAAW,qBACxDf,EAAOgB,eAAeP,EAAOI,QAEjC,CACF,EA2BMI,MAAOhC,GAAU,GACjBiC,QAAS,CAACC,aAAa,EAAMC,KAAM,QACnCC,MAAO,CAAC,yBAzBVpG,EAAAA,EAAAA,KAACrB,EAAAA,EAAG,CAACT,QAAS,CAACoG,SAAU,IAAI5F,UAC3BsB,EAAAA,EAAAA,KAACqG,EAAAA,EAAO,CAACC,QAAQ,aA4BzB,IAIA,YAEO,IAAM5C,GAAwB6C,EAAAA,EAAAA,IAAG9F,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,uG,0KChG3BmH,EAAsBhE,EAAAA,MAAW,WAC5C,IAAOiE,EAAWjE,EAAAA,WAAiBkE,EAAAA,GAA5BD,QAEP,OAAKA,GAKHzG,EAAAA,EAAAA,KAAC2G,EAAAA,EAAc,CACbjF,QAAS+E,EAAQ/E,QACjBkF,SAAS,SACTC,UAAW,CAACC,OAAQ,CAACC,SAAS,EAAMd,QAAS,CAACa,OAAQ,CAAC,EAAG,OAAOpI,UAEjEsB,EAAAA,EAAAA,KAACgH,EAAAA,GAAI,CAACC,KAAK,UAAUzI,MAAOR,EAAAA,EAAOkJ,cAT9B,IAYX,I,sBChBaC,EAAoD3E,EAAAA,MAAW,SAAA9B,GAAoB,IAAlB0G,EAAW1G,EAAX0G,YACrEC,EAAiB7E,EAAAA,WAAiBkE,EAAAA,GAAlCW,cAEP,OAAKA,EAIsB,YAAvBA,EAAcxF,MAEd7B,EAAAA,EAAAA,KAACsH,EAAAA,EAAO,CAAC5F,QAAS2F,EAAc3F,QAAS6F,UAAU,SAAQ7I,UACzDsB,EAAAA,EAAAA,KAACqG,EAAAA,EAAO,CAACC,QAAQ,YAAYkB,UAAWxJ,EAAAA,EAAO+C,aAMnDf,EAAAA,EAAAA,KAAC2G,EAAAA,EAAc,CACbjF,QAAS2F,EAAc3F,QACvBkF,SAAS,SACTC,UAAW,CAACC,OAAQ,CAACC,SAAS,EAAMd,QAAS,CAACa,OAAQ,CAAC,EAAG,OAAOpI,UAEjEsB,EAAAA,EAAAA,KAACgH,EAAAA,GAAI,CAACC,KAAK,UAAUzI,MAAOR,EAAAA,EAAOkJ,cAjB9BE,GAAcpH,EAAAA,EAAAA,KAAA,OAAK0E,MAAO,CAACnG,MAAO,UAAc,IAoB3D,I,gCCZa6F,EAAe,SAAoC5G,GAC9D,IAAOoG,EAAqBpG,EAArBoG,aAAcS,EAAO7G,EAAP6G,IAEdoD,EAAejF,EAAAA,WAAiBe,EAAAA,GAAhCkE,YACDC,GAAeC,EAAAA,EAAAA,KACdC,GAAiCC,EAAAA,EAAAA,MAAjCD,8BAEP,OACE/J,EAAAA,EAAAA,MAACc,EAAAA,EAAG,CAACC,KAAM,CAACC,UAAW,MAAOC,eAAgB,gBAAiBE,WAAY,YAAYN,SAAA,EACrFb,EAAAA,EAAAA,MAACkE,EAAAA,GAAI,CAACE,cAAeoC,EAAI3F,SAAA,EACvBsB,EAAAA,EAAAA,KAAC8H,EAAAA,EAAO,CACNnF,GAAG,YACHlF,MAAM,iBACNoI,GAAG,aACHhG,MAAMG,EAAAA,EAAAA,KAACmH,EAAe,CAACC,aAAa,OAEtCpH,EAAAA,EAAAA,KAAC8H,EAAAA,EAAO,CAACnF,GAAG,SAASlF,MAAOgK,EAAa5B,GAAG,UAAUhG,MAAMG,EAAAA,EAAAA,KAACwG,EAAmB,MAC/EkB,GAAgBE,GACf5H,EAAAA,EAAAA,KAAC8H,EAAAA,EAAO,CAACnF,GAAG,cAAclF,MAAM,qBAAqBoI,GAAG,iBACtD,KACH6B,GAAe1H,EAAAA,EAAAA,KAAC8H,EAAAA,EAAO,CAACnF,GAAG,SAASlF,MAAM,gBAAgBoI,GAAG,YAAe,QAE9EjC,GACC5D,EAAAA,EAAAA,KAACrB,EAAAA,EAAG,CAACT,QAAS,CAACa,OAAQ,GAAGL,UACxBsB,EAAAA,EAAAA,KAAC+H,EAAAA,GAAqB,CAACnE,aAAcA,MAErC,OAGV,C,+FCzCa+D,EAAkB,WAC7B,IAAO5D,GAAQN,EAAAA,EAAAA,GACbuE,GADKjE,KAGP,QAAa,OAAJA,QAAI,IAAJA,IAAAA,EAAME,SAASgE,QAC1B,EAEMD,GAA2BzB,EAAAA,EAAAA,IAAGnH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+F,iLCLvByI,GAAU3I,EAAAA,EAAAA,KAAO,SAAC3B,GAC7B,IAAOqI,EAAgCrI,EAAhCqI,GAAIpI,EAA4BD,EAA5BC,MAAO+B,EAAqBhC,EAArBgC,SAAa6C,GAAIC,EAAAA,EAAAA,GAAI9E,EAAK+E,GACtCd,GAAiBnC,EAAAA,EAAAA,IAAgB9B,GACjCkE,GAAU/B,EAAAA,EAAAA,IAAcnC,GAExBmE,EAA6B,kBAAVlE,EAAqBA,OAAQsC,EAEtD,OACEC,EAAAA,EAAAA,KAACkI,EAAAA,IAAItG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACiE,GAAIrG,EAAW,IAAMqG,EAAIpI,MAAOkE,GAAeF,GAAoBY,GAAI,IAAA3D,SAC1EgD,IAGP,GAZuBvC,CAYrBC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gBACEkB,EAAAA,G","sources":["../../ui-components/src/components/PageHeader.tsx","../../ui-components/src/components/Tabs.tsx","../../ui-core/src/instance/InstanceConfig.tsx","../../ui-core/src/nav/InstanceWarningIcon.tsx","../../ui-core/src/nav/WorkspaceStatus.tsx","../../ui-core/src/instance/InstanceTabs.tsx","../../ui-core/src/instance/useCanSeeConfig.tsx","../../ui-core/src/ui/TabLink.tsx"],"sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n","import * as React from 'react';\nimport styled, {css} from 'styled-components';\n\nimport {Colors} from './Colors';\nimport {IconWrapper} from './Icon';\nimport {FontFamily} from './styles';\n\nexport interface TabStyleProps {\n  disabled?: boolean;\n  selected?: boolean;\n  count?: number | 'indeterminate' | null;\n  icon?: React.ReactNode;\n  title?: React.ReactNode;\n  $size?: 'small' | 'large';\n}\n\nexport const getTabA11yProps = (props: {selected?: boolean; disabled?: boolean}) => {\n  const {selected, disabled} = props;\n  return {\n    role: 'tab',\n    tabIndex: disabled ? -1 : 0,\n    'aria-disabled': disabled,\n    'aria-expanded': selected,\n    'aria-selected': selected,\n  };\n};\n\nexport const getTabContent = (props: TabStyleProps & {title?: React.ReactNode}) => {\n  const {title, count, icon} = props;\n  return (\n    <>\n      {title}\n      {icon}\n      {count !== undefined ? <Count>{count === 'indeterminate' ? 'â€“' : count}</Count> : null}\n    </>\n  );\n};\n\nconst Count = styled.div`\n  display: inline;\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.02%;\n  padding: 0 4px;\n  color: ${Colors.Gray900};\n  background: ${Colors.Gray100};\n`;\n\nexport const tabCSS = css<TabStyleProps>`\n  background: none;\n  border: none;\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 600;\n  padding: ${({$size}) => ($size === 'small' ? '10px 0' : '16px 0')};\n  box-shadow: ${({selected}) => (selected ? Colors.Blue500 : 'transparent')} 0 -2px 0 inset;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  gap: 6px;\n\n  &,\n  & a {\n    cursor: pointer;\n    user-select: none;\n    color: ${({selected, disabled}) =>\n      selected ? Colors.Blue500 : disabled ? Colors.Gray300 : Colors.Gray700};\n  }\n\n  & ${IconWrapper} {\n    background: ${({selected, disabled}) =>\n      selected ? Colors.Blue500 : disabled ? Colors.Gray300 : ''};\n  }\n\n  /* Focus outline only when using keyboard, not when focusing via mouse. */\n  &:focus {\n    outline: none !important;\n    box-shadow: ${({selected, disabled}) =>\n        selected ? Colors.Blue500 : disabled ? 'transparent' : Colors.Blue200}\n      0 -2px 0 inset;\n  }\n\n  &:hover {\n    &,\n    a {\n      text-decoration: none;\n      color: ${({selected, disabled}) =>\n        selected ? Colors.Blue700 : disabled ? Colors.Gray300 : Colors.Blue700};\n    }\n    ${IconWrapper} {\n      color: ${({selected, disabled}) =>\n        selected ? Colors.Blue700 : disabled ? Colors.Gray300 : ''};\n    }\n  }\n`;\n\ninterface TabProps extends TabStyleProps, Omit<React.ComponentPropsWithoutRef<'button'>, 'title'> {}\n\nexport const Tab = styled((props: TabProps) => {\n  const containerProps = getTabA11yProps(props);\n  const content = getTabContent(props);\n\n  const titleText = typeof props.title === 'string' ? props.title : undefined;\n\n  return (\n    <button {...props} {...containerProps} title={titleText} type=\"button\">\n      {content}\n    </button>\n  );\n})<TabStyleProps>`\n  ${tabCSS}\n`;\n\ninterface TabsProps {\n  children: Array<React.ReactElement<TabProps>>;\n  selectedTabId?: string;\n  onChange?: (selectedTabId: string) => void;\n  size?: 'small' | 'large';\n}\n\nexport const Tabs = styled(({selectedTabId, children, onChange, size = 'large', ...rest}) => {\n  return (\n    <div {...rest} role=\"tablist\">\n      {React.Children.map(children, (child) =>\n        child\n          ? React.cloneElement(child, {\n              selected: child.props.selected || child.props.id === selectedTabId,\n              $size: size,\n              ...(onChange\n                ? {\n                    onClick: () => onChange(child.props.id),\n                  }\n                : {}),\n            })\n          : null,\n      )}\n    </div>\n  );\n})<TabsProps>`\n  display: flex;\n  gap: 16px;\n  font-size: ${({size}) => (size === 'small' ? '12px' : '14px')};\n  line-height: ${({size}) => (size === 'small' ? '16px' : '20px')};\n  font-weight: 600;\n`;\n","import 'codemirror/addon/search/searchcursor';\n\nimport {gql, useQuery} from '@apollo/client';\nimport {\n  Box,\n  Colors,\n  PageHeader,\n  Spinner,\n  Code,\n  Heading,\n  StyledReadOnlyCodeMirror,\n  Subheading,\n} from '@dagster-io/ui-components';\nimport * as codemirror from 'codemirror';\nimport * as React from 'react';\nimport {createGlobalStyle} from 'styled-components';\n\nimport {useQueryRefreshAtInterval, FIFTEEN_SECONDS} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceConfigQuery, InstanceConfigQueryVariables} from './types/InstanceConfig.types';\n\nconst InstanceConfigStyle = createGlobalStyle`\n  .react-codemirror2 .CodeMirror.cm-s-instance-config {\n    box-shadow: 0 1px 0 ${Colors.KeylineGray};\n    height: 100%;\n  }\n\n  .react-codemirror2 .CodeMirror.cm-s-instance-config {\n    .config-highlight {\n      background-color: ${Colors.Yellow200};\n    }\n`;\n\nexport const InstanceConfig = React.memo(() => {\n  useTrackPageView();\n  useDocumentTitle('Configuration');\n\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const queryResult = useQuery<InstanceConfigQuery, InstanceConfigQueryVariables>(\n    INSTANCE_CONFIG_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n  const {data} = queryResult;\n  const config = data?.instance.info;\n\n  const onEditorDidMount = (editor: codemirror.Editor) => {\n    const documentHash = document.location.hash;\n    if (documentHash) {\n      const target = new RegExp(`^${documentHash.slice(1)}:`);\n      const cursor = editor.getSearchCursor(target);\n      const found = cursor.findNext();\n      if (found) {\n        editor.markText(cursor.from(), cursor.to(), {className: 'config-highlight'});\n        editor.scrollIntoView(cursor.from());\n      }\n    }\n  };\n\n  if (!data) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <Spinner purpose=\"section\" />\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <InstanceConfigStyle />\n      <PageHeader\n        title={<Heading>{pageTitle}</Heading>}\n        tabs={<InstanceTabs tab=\"config\" refreshState={refreshState} />}\n      />\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n      >\n        <Subheading>\n          Dagster version: <Code style={{fontSize: '16px'}}>{data.version}</Code>\n        </Subheading>\n      </Box>\n      <StyledReadOnlyCodeMirror\n        editorDidMount={onEditorDidMount}\n        value={config || ''}\n        options={{lineNumbers: true, mode: 'yaml'}}\n        theme={['instance-config']}\n      />\n    </>\n  );\n});\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default InstanceConfig;\n\nexport const INSTANCE_CONFIG_QUERY = gql`\n  query InstanceConfigQuery {\n    version\n    instance {\n      id\n      info\n    }\n  }\n`;\n","import {Colors, Icon} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nimport {WarningTooltip} from './WarningTooltip';\n\nexport const InstanceWarningIcon = React.memo(() => {\n  const {daemons} = React.useContext(DeploymentStatusContext);\n\n  if (!daemons) {\n    return null;\n  }\n\n  return (\n    <WarningTooltip\n      content={daemons.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.Yellow500} />\n    </WarningTooltip>\n  );\n});\n","import {Colors, Icon, Tooltip, Spinner} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nimport {WarningTooltip} from './WarningTooltip';\n\nexport const WorkspaceStatus: React.FC<{placeholder: boolean}> = React.memo(({placeholder}) => {\n  const {codeLocations} = React.useContext(DeploymentStatusContext);\n\n  if (!codeLocations) {\n    return placeholder ? <div style={{width: '16px'}} /> : null;\n  }\n\n  if (codeLocations.type === 'spinner') {\n    return (\n      <Tooltip content={codeLocations.content} placement=\"bottom\">\n        <Spinner purpose=\"body-text\" fillColor={Colors.Gray300} />\n      </Tooltip>\n    );\n  }\n\n  return (\n    <WarningTooltip\n      content={codeLocations.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.Yellow500} />\n    </WarningTooltip>\n  );\n});\n","import {QueryResult} from '@apollo/client';\nimport {Box, Tabs} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {QueryRefreshCountdown, QueryRefreshState} from '../app/QueryRefresh';\nimport {InstanceWarningIcon} from '../nav/InstanceWarningIcon';\nimport {WorkspaceStatus} from '../nav/WorkspaceStatus';\nimport {TabLink} from '../ui/TabLink';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {useCanSeeConfig} from './useCanSeeConfig';\n\ninterface Props<TData> {\n  refreshState?: QueryRefreshState;\n  queryData?: QueryResult<TData, any>;\n  tab: string;\n}\n\nexport const InstanceTabs = <TData extends Record<string, any>>(props: Props<TData>) => {\n  const {refreshState, tab} = props;\n\n  const {healthTitle} = React.useContext(InstancePageContext);\n  const canSeeConfig = useCanSeeConfig();\n  const {flagInstanceConcurrencyLimits} = useFeatureFlags();\n\n  return (\n    <Box flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}>\n      <Tabs selectedTabId={tab}>\n        <TabLink\n          id=\"locations\"\n          title=\"Code locations\"\n          to=\"/locations\"\n          icon={<WorkspaceStatus placeholder={false} />}\n        />\n        <TabLink id=\"health\" title={healthTitle} to=\"/health\" icon={<InstanceWarningIcon />} />\n        {canSeeConfig && flagInstanceConcurrencyLimits ? (\n          <TabLink id=\"concurrency\" title=\"Concurrency limits\" to=\"/concurrency\" />\n        ) : null}\n        {canSeeConfig ? <TabLink id=\"config\" title=\"Configuration\" to=\"/config\" /> : null}\n      </Tabs>\n      {refreshState ? (\n        <Box padding={{bottom: 8}}>\n          <QueryRefreshCountdown refreshState={refreshState} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceConfigHasInfoQuery,\n  InstanceConfigHasInfoQueryVariables,\n} from './types/useCanSeeConfig.types';\n\nexport const useCanSeeConfig = () => {\n  const {data} = useQuery<InstanceConfigHasInfoQuery, InstanceConfigHasInfoQueryVariables>(\n    INSTANCE_CONFIG_HAS_INFO,\n  );\n  return !!data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      id\n      hasInfo\n    }\n  }\n`;\n","import {TabStyleProps, getTabA11yProps, getTabContent, tabCSS} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\nimport styled from 'styled-components';\n\ninterface TabLinkProps extends TabStyleProps, Omit<LinkProps, 'title'> {\n  title?: React.ReactNode;\n}\n\nexport const TabLink = styled((props: TabLinkProps) => {\n  const {to, title, disabled, ...rest} = props;\n  const containerProps = getTabA11yProps(props);\n  const content = getTabContent(props);\n\n  const titleText = typeof title === 'string' ? title : undefined;\n\n  return (\n    <Link to={disabled ? '#' : to} title={titleText} {...containerProps} {...rest}>\n      {content}\n    </Link>\n  );\n})<TabLinkProps>`\n  ${tabCSS}\n`;\n"],"names":["PageHeader","props","title","tags","right","tabs","_jsxs","PageHeaderContainer","background","Colors","Gray50","padding","top","left","border","side","width","color","KeylineGray","children","Box","flex","direction","justifyContent","bottom","alignItems","gap","wrap","styled","_templateObject","_taggedTemplateLiteral","getTabA11yProps","selected","disabled","role","tabIndex","getTabContent","count","icon","_Fragment","undefined","_jsx","Count","div","FontFamily","monospace","Gray900","Gray100","tabCSS","css","_templateObject2","_ref","$size","_ref2","Blue500","_ref3","Gray300","Gray700","IconWrapper","_ref4","_ref5","Blue200","_ref6","Blue700","_ref7","Tab","containerProps","content","titleText","_objectSpread","type","_templateObject3","Tabs","_ref8","selectedTabId","onChange","_ref8$size","size","rest","_objectWithoutProperties","_excluded","React","map","child","id","onClick","_templateObject4","_ref9","_ref10","InstanceConfigStyle","createGlobalStyle","Yellow200","InstanceConfig","useTrackPageView","useDocumentTitle","pageTitle","InstancePageContext","queryResult","useQuery","INSTANCE_CONFIG_QUERY","notifyOnNetworkStatusChange","refreshState","useQueryRefreshAtInterval","FIFTEEN_SECONDS","data","config","instance","info","Heading","InstanceTabs","tab","vertical","horizontal","Subheading","Code","style","fontSize","version","StyledReadOnlyCodeMirror","editorDidMount","editor","documentHash","document","location","hash","target","RegExp","concat","slice","cursor","getSearchCursor","findNext","markText","from","to","className","scrollIntoView","value","options","lineNumbers","mode","theme","Spinner","purpose","gql","InstanceWarningIcon","daemons","DeploymentStatusContext","WarningTooltip","position","modifiers","offset","enabled","Icon","name","Yellow500","WorkspaceStatus","placeholder","codeLocations","Tooltip","placement","fillColor","healthTitle","canSeeConfig","useCanSeeConfig","flagInstanceConcurrencyLimits","useFeatureFlags","TabLink","QueryRefreshCountdown","INSTANCE_CONFIG_HAS_INFO","hasInfo","Link"],"sourceRoot":""}