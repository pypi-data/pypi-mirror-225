{"version":3,"file":"static/js/173.7793a585.chunk.js","mappings":"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","sources":["../../ui-components/src/components/Alert.tsx","../../ui-components/src/components/NonIdealState.tsx","../../ui-components/src/components/Page.tsx","../../ui-components/src/components/PageHeader.tsx","../../ui-core/src/ui/Loading.tsx","../../ui-core/src/workspace/GuessJobLocationRoot.tsx"],"sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {Group} from './Group';\nimport {IconName, Icon} from './Icon';\n\nexport type AlertIntent = 'info' | 'warning' | 'error' | 'success';\n\ninterface Props {\n  intent: AlertIntent;\n  title: React.ReactNode;\n  description?: React.ReactNode;\n  icon?: React.ReactNode;\n  onClose?: () => void;\n}\n\nexport const Alert: React.FC<Props> = (props) => {\n  const {intent, title, description, onClose} = props;\n\n  const {backgroundColor, borderColor, icon, iconColor, textColor} = React.useMemo(() => {\n    switch (intent) {\n      case 'warning':\n        return {\n          backgroundColor: Colors.Yellow50,\n          borderColor: Colors.Yellow500,\n          icon: 'warning',\n          iconColor: Colors.Yellow500,\n          textColor: Colors.Yellow700,\n        };\n      case 'error':\n        return {\n          backgroundColor: Colors.Red50,\n          borderColor: Colors.Red500,\n          icon: 'error',\n          iconColor: Colors.Red500,\n          textColor: Colors.Red700,\n        };\n      case 'success':\n        return {\n          backgroundColor: Colors.Green50,\n          borderColor: Colors.Green500,\n          icon: 'done',\n          iconColor: Colors.Green500,\n          textColor: Colors.Green700,\n        };\n      case 'info':\n      default:\n        return {\n          backgroundColor: Colors.Blue50,\n          borderColor: Colors.Blue500,\n          icon: 'info',\n          iconColor: Colors.Blue500,\n          textColor: Colors.Blue700,\n        };\n    }\n  }, [intent]);\n\n  return (\n    <AlertContainer\n      background={backgroundColor}\n      $borderColor={borderColor}\n      $textColor={textColor}\n      padding={{horizontal: 16, vertical: 12}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}}>\n        <Group direction=\"row\" spacing={12} alignItems=\"flex-start\">\n          {props.icon || <Icon name={icon as IconName} color={iconColor} />}\n          <Group direction=\"column\" spacing={8}>\n            <AlertTitle>{title}</AlertTitle>\n            {description ? <AlertDescription>{description}</AlertDescription> : null}\n          </Group>\n        </Group>\n        {!!onClose ? (\n          <ButtonWrapper onClick={onClose}>\n            <Icon name=\"close\" color={textColor} />\n          </ButtonWrapper>\n        ) : null}\n      </Box>\n    </AlertContainer>\n  );\n};\n\nAlert.defaultProps = {\n  intent: 'info',\n};\n\nconst ButtonWrapper = styled.button`\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  flex-direction: column;\n  height: fit-content;\n`;\n\nconst AlertContainer = styled(Box)<{$borderColor: string; $textColor: string}>`\n  box-shadow: inset 4px 0 ${({$borderColor}) => $borderColor};\n  color: ${({$textColor}) => $textColor};\n\n  a:link,\n  a:visited,\n  a:hover,\n  a:active {\n    color: ${({$textColor}) => $textColor};\n    text-decoration: underline;\n  }\n`;\n\nconst AlertTitle = styled.div`\n  font-weight: 600;\n`;\n\nconst AlertDescription = styled.div`\n  font-weight: 400;\n`;\n","import * as React from 'react';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName, Icon} from './Icon';\nimport {Spinner} from './Spinner';\nimport {Subheading} from './Text';\n\nexport type NonIdealStateProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n> & {\n  icon?: 'error' | 'no-results' | 'spinner' | IconName;\n  title: string;\n  description?: React.ReactNode;\n  action?: React.ReactNode;\n  shrinkable?: boolean;\n};\n\nexport const NonIdealState: React.FC<NonIdealStateProps> = ({\n  title,\n  description,\n  icon,\n  action,\n  shrinkable,\n}) => {\n  const singleContentElement = [title, description, action].filter(Boolean).length === 1;\n\n  return (\n    <Box\n      flex={{gap: 20, alignItems: singleContentElement ? 'center' : 'flex-start'}}\n      background={Colors.Gray50}\n      padding={24}\n      style={{\n        margin: 'auto',\n        borderRadius: 8,\n        width: shrinkable ? 'initial' : 'max-content',\n        maxWidth: 500,\n      }}\n    >\n      {icon === 'spinner' ? (\n        <Spinner purpose=\"section\" />\n      ) : icon === 'no-results' ? (\n        <Icon name=\"search\" size={48} color={Colors.Gray400} />\n      ) : icon ? (\n        <Icon name={icon} size={48} color={Colors.Gray400} />\n      ) : null}\n      <Box\n        flex={{\n          gap: 8,\n          direction: 'column',\n          alignItems: 'flex-start',\n          shrink: 1,\n          grow: 1,\n        }}\n      >\n        {title && <Subheading style={{color: Colors.Gray900}}>{title}</Subheading>}\n        {description && <div style={{color: Colors.Gray500}}>{description}</div>}\n        {action}\n      </Box>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  padding-bottom: 64px;\n  width: 100%;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n","import {ApolloError, QueryResult} from '@apollo/client';\nimport {Box, NonIdealState, Spinner} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {ERROR_CODES_TO_SURFACE, errorCodeToMessage} from '../app/HTTPErrorCodes';\n\ninterface ILoadingProps<TData> {\n  queryResult: QueryResult<TData, any>;\n  children: (data: TData) => React.ReactNode;\n  renderError?: (error: ApolloError) => React.ReactNode;\n  allowStaleData?: boolean;\n  purpose: 'section' | 'page';\n}\n\nconst BLANK_LOADING_DELAY_MSEC = 500;\n\nexport const Loading = <TData extends Record<string, any>>(props: ILoadingProps<TData>) => {\n  const {children, purpose, allowStaleData = false, renderError} = props;\n  const {error, data, loading} = props.queryResult;\n\n  const [blankLoading, setBlankLoading] = React.useState(true);\n  const isLoading = !data || (loading && !allowStaleData) || Object.keys(data as any).length === 0;\n\n  React.useEffect(() => {\n    let timer: ReturnType<typeof setTimeout> | undefined;\n\n    // Wait a brief moment so that we don't awkwardly flash the loading bar.\n    // This is often enough time for data to become available.\n    if (isLoading) {\n      timer = setTimeout(() => setBlankLoading(false), BLANK_LOADING_DELAY_MSEC);\n    } else {\n      setBlankLoading(true);\n    }\n\n    return () => {\n      timer && clearTimeout(timer);\n    };\n  }, [isLoading]);\n\n  // either error.networkError or error.graphQLErrors is set,\n  // so check that the error is not just a transient network error\n  if (error) {\n    if (renderError) {\n      return <>{renderError(error)}</>;\n    }\n\n    const {networkError} = error;\n    if (!networkError) {\n      return (\n        <Box padding={64} flex={{justifyContent: 'center'}}>\n          <NonIdealState icon=\"error\" title=\"GraphQL Error - see console for details\" />\n        </Box>\n      );\n    }\n\n    if ('statusCode' in networkError && ERROR_CODES_TO_SURFACE.has(networkError.statusCode)) {\n      const statusCode = networkError.statusCode;\n      return (\n        <Box padding={64} flex={{justifyContent: 'center'}}>\n          <NonIdealState\n            icon=\"error\"\n            title=\"Network error\"\n            description={errorCodeToMessage(statusCode)}\n          />\n        </Box>\n      );\n    }\n  }\n\n  if (isLoading) {\n    return blankLoading ? null : <LoadingSpinner purpose={purpose} />;\n  }\n\n  return <>{children(data as TData)}</>;\n};\n\nexport const LoadingSpinner: React.FC<{purpose: 'page' | 'section'}> = ({purpose}) => {\n  const isPage = purpose === 'page';\n  return (\n    <Box\n      padding={64}\n      flex={{\n        grow: isPage ? 1 : undefined,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n      style={isPage ? {height: '100%'} : undefined}\n    >\n      <Spinner purpose={purpose} />\n    </Box>\n  );\n};\n\nLoading.defaultProps = {\n  purpose: 'page',\n};\n","import {\n  Alert,\n  Box,\n  NonIdealState,\n  Page,\n  PageHeader,\n  Table,\n  Heading,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link, Redirect, useLocation, useParams, useRouteMatch} from 'react-router-dom';\n\nimport {useTrackPageView} from '../app/analytics';\nimport {explorerPathFromString} from '../pipelines/PipelinePathUtils';\nimport {LoadingSpinner} from '../ui/Loading';\n\nimport {isThisThingAJob, optionToRepoAddress, useRepositoryOptions} from './WorkspaceContext';\nimport {buildRepoPathForHuman} from './buildRepoAddress';\nimport {findRepoContainingPipeline} from './findRepoContainingPipeline';\nimport {workspacePath, workspacePathFromAddress} from './workspacePath';\n\nexport const GuessJobLocationRoot = () => {\n  useTrackPageView();\n\n  const params = useParams<{jobPath: string}>();\n  const {jobPath} = params;\n\n  const entireMatch = useRouteMatch('/guess/(/?.*)');\n  const location = useLocation();\n\n  const toAppend = (entireMatch!.params as any)[0];\n  const {search} = location;\n\n  const {pipelineName} = explorerPathFromString(jobPath);\n  const {loading, options} = useRepositoryOptions();\n\n  if (loading) {\n    return <LoadingSpinner purpose=\"page\" />;\n  }\n\n  const reposWithMatch = findRepoContainingPipeline(options, pipelineName);\n  if (reposWithMatch.length === 0) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <NonIdealState\n          icon=\"no-results\"\n          title=\"No matching jobs\"\n          description={\n            <div>\n              <div>\n                <strong>{pipelineName}</strong>\n              </div>\n              was not found in any of your definitions.\n            </div>\n          }\n        />\n      </Box>\n    );\n  }\n\n  if (reposWithMatch.length === 1) {\n    const match = reposWithMatch[0]!;\n    const repoAddress = optionToRepoAddress(match);\n    const isJob = isThisThingAJob(match, pipelineName);\n    const to = workspacePathFromAddress(\n      repoAddress,\n      `/${isJob ? 'jobs' : 'pipelines'}/${toAppend}${search}`,\n    );\n    return <Redirect to={to} />;\n  }\n\n  const anyPipelines = reposWithMatch.some((repo) => !isThisThingAJob(repo, pipelineName));\n\n  return (\n    <Page>\n      <PageHeader\n        title={<Heading>{pipelineName}</Heading>}\n        icon=\"job\"\n        description={\n          anyPipelines\n            ? 'Job / pipeline in multiple code locations'\n            : 'Job in multiple code locations'\n        }\n      />\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <Alert\n          intent=\"info\"\n          title={\n            <div>\n              {anyPipelines ? (\n                <>\n                  Jobs or pipelines named <strong>{pipelineName}</strong> were found in multiple\n                  code locations.\n                </>\n              ) : (\n                <>\n                  Jobs named <strong>{pipelineName}</strong> were found in multiple code locations.\n                </>\n              )}\n            </div>\n          }\n        />\n      </Box>\n      <Table>\n        <thead>\n          <tr>\n            <th>Code location</th>\n            <th>{anyPipelines ? 'Job / Pipeline' : 'Job'}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {reposWithMatch.map((repository) => {\n            const {\n              repository: {name},\n              repositoryLocation: {name: location},\n            } = repository;\n            const repoString = buildRepoPathForHuman(name, location);\n            return (\n              <tr key={repoString}>\n                <td style={{width: '40%'}}>{repoString}</td>\n                <td>\n                  <Link\n                    to={workspacePath(\n                      name,\n                      location,\n                      `/${\n                        isThisThingAJob(repository, pipelineName) ? 'jobs' : 'pipelines'\n                      }/${pipelineName}`,\n                    )}\n                  >\n                    {pipelineName}\n                  </Link>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </Page>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default GuessJobLocationRoot;\n"],"names":["Alert","props","intent","title","description","onClose","_React$useMemo","React","backgroundColor","Colors","Yellow50","borderColor","Yellow500","icon","iconColor","textColor","Yellow700","Red50","Red500","Red700","Green50","Green500","Green700","Blue50","Blue500","Blue700","_jsx","AlertContainer","background","$borderColor","$textColor","padding","horizontal","vertical","children","_jsxs","Box","flex","direction","justifyContent","Group","spacing","alignItems","Icon","name","color","AlertTitle","AlertDescription","ButtonWrapper","onClick","defaultProps","styled","button","_templateObject","_taggedTemplateLiteral","_templateObject2","_ref","_ref2","_ref3","div","_templateObject3","_templateObject4","NonIdealState","action","shrinkable","singleContentElement","filter","Boolean","length","gap","Gray50","style","margin","borderRadius","width","maxWidth","Spinner","purpose","size","Gray400","shrink","grow","Subheading","Gray900","Gray500","Page","PageHeader","tags","right","tabs","PageHeaderContainer","top","left","border","side","KeylineGray","bottom","wrap","Loading","_props$allowStaleData","allowStaleData","renderError","_props$queryResult","queryResult","error","data","loading","_React$useState","_React$useState2","_slicedToArray","blankLoading","setBlankLoading","isLoading","Object","keys","timer","setTimeout","clearTimeout","_Fragment","networkError","ERROR_CODES_TO_SURFACE","has","statusCode","errorCodeToMessage","LoadingSpinner","isPage","undefined","height","GuessJobLocationRoot","useTrackPageView","jobPath","useParams","entireMatch","useRouteMatch","location","useLocation","toAppend","params","search","pipelineName","explorerPathFromString","_useRepositoryOptions","useRepositoryOptions","options","reposWithMatch","findRepoContainingPipeline","match","repoAddress","optionToRepoAddress","isJob","isThisThingAJob","to","workspacePathFromAddress","concat","Redirect","anyPipelines","some","repo","Heading","Table","map","repository","repositoryLocation","repoString","buildRepoPathForHuman","Link","workspacePath"],"sourceRoot":""}