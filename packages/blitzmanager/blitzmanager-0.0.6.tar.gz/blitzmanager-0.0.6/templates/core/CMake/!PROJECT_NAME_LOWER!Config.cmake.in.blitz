!BLITZ_NOTICE!

# !PROJECT_NAME! CMake configuration file.

include(CMakeFindDependencyMacro)
find_dependency(Threads)


set(!PROJECT_NAME_CAPITAL!_IMPORTED_LIBS @!PROJECT_NAME_CAPITAL!_IMPORTED_LIBS@)
set(!PROJECT_NAME_CAPITAL!_DEPENDENCIES @!PROJECT_NAME_CAPITAL!_DEPENDENCIES@)

# List of modules that !PROJECT_NAME! currently contain
set(!PROJECT_NAME_CAPITAL!_MODULES @!PROJECT_NAME_CAPITAL!_MODULES@)

set(!PROJECT_NAME_CAPITAL!_LIBS_TYPE @!PROJECT_NAME_CAPITAL!_LIBS_TYPE@)

set(_temp)
foreach(X IN LISTS !PROJECT_NAME_CAPITAL!_DEPENDENCIES)
  if("${X}" STREQUAL "STOP")
      find_package(${_temp})
      unset(_temp)
      set(_temp)
      continue()
  endif()
  list(APPEND _temp ${X})
endforeach()
unset(_temp)
unset(!PROJECT_NAME_CAPITAL!_DEPENDENCIES)


set(_temp)
foreach(X IN LISTS !PROJECT_NAME_CAPITAL!_IMPORTED_LIBS)
    if("${X}" STREQUAL "STOP")
        list(GET _temp 0 _imported_target_name)
        list(GET _temp 1 _imported_target_type)
        list(GET _temp 4 _imported_target_cmake_path)

        add_library("${_imported_target_name}" "${_imported_target_type}" IMPORTED)

        if (NOT EXISTS "${_imported_target_cmake_path}")
            message(FATAL_ERROR "The following path does not exist  : ${_imported_target_cmake_path}")
        endif ()

        set_property(TARGET "${_imported_target_name}"  PROPERTY
                IMPORTED_LOCATION "${_imported_target_cmake_path}")

        unset(_imported_target_name)
        unset(_imported_target_type)
        unset(_imported_target_cmake_path)
        unset(_temp)

        set(_temp)

        continue()
    endif()
    list(APPEND _temp ${X})
endforeach()
unset(_temp)
unset(!PROJECT_NAME_CAPITAL!_IMPORTED_LIBS)
include_directories(BEFORE PUBLIC ${DUMMY_INCLUDE_DIR})

@PACKAGE_INIT@

include ("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@Targets.cmake")
