"use strict";(self.webpackChunkjupyterlab_remote_url=self.webpackChunkjupyterlab_remote_url||[]).push([[763],{763:(e,t,o)=>{o.r(t),o.d(t,{default:()=>u});var r=o(303),a=o(344),n=o(139);const s="jupyterlab_remote_url",c="Remote URL",i=async()=>{const{base_url:e,token:t}=await async function(e="",t={}){const o=n.ServerConnection.makeSettings(),r=a.URLExt.join(o.baseUrl,"jupyterlab-remote-url",e);let s;try{s=await n.ServerConnection.makeRequest(r,t,o)}catch(e){throw new n.ServerConnection.NetworkError(e)}let c=await s.text();if(c.length>0)try{c=JSON.parse(c)}catch(e){console.log("Not a JSON response body.",s)}if(!s.ok)throw new n.ServerConnection.ResponseError(s,c.message||c);return c}("info"),o=new URL(e,window.location.origin);return o.searchParams.set("token",t),o},u={id:`${s}:plugin`,description:"A JupyterLab extension to help set up a remote connection to the Jupyter server.",autoStart:!0,requires:[r.ICommandPalette],activate:(e,t)=>{console.log(`JupyterLab extension ${s} is activated!`);const o=`${s}:copy`,a=`${s}:show`;e.commands.addCommand(o,{label:"Copy Jupyter server URL",caption:"Copy Jupyter server URL",execute:async()=>{const e=await i();await navigator.clipboard.writeText(e.toString())}}),e.commands.addCommand(a,{label:"Show Jupyter server URL",caption:"Show Jupyter server URL",execute:async()=>{const e=await i();await(0,r.showDialog)({title:"Jupyter server URL",body:e.toString(),buttons:[r.Dialog.okButton()]})}}),t.addItem({command:o,category:c}),t.addItem({command:a,category:c})}}}}]);