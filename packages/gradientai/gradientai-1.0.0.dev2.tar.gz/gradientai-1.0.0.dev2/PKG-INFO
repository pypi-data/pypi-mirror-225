Metadata-Version: 2.1
Name: gradientai
Version: 1.0.0.dev2
Summary: Gradient AI API
Home-page: https://github.com/GIT_USER_ID/GIT_REPO_ID
License: NoLicense
Keywords: OpenAPI,OpenAPI-Generator,Gradient AI API
Author: OpenAPI Generator Community
Author-email: team@openapitools.org
Requires-Python: >=3.7,<4.0
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: aenum (>=3.1.11)
Requires-Dist: pydantic (>=1.10.5,<2.0.0)
Requires-Dist: python-dateutil (>=2.8.2)
Requires-Dist: urllib3 (>=1.25.3)
Project-URL: Repository, https://github.com/GIT_USER_ID/GIT_REPO_ID
Description-Content-Type: text/markdown

# gradientai-python-sdk
Interface for interacting with Gradient AI.

This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: 1.0.0
- Package version: 1.0.0-dev.2
- Build package: org.openapitools.codegen.languages.PythonClientCodegen

## Requirements.

Python 3.7+

## Installation & Usage
### pip install

If the python package is hosted on a repository, you can install directly using:

```sh
pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git
```
(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git`)

Then import the package:
```python
import gradientai
```

### Setuptools

Install via [Setuptools](http://pypi.python.org/pypi/setuptools).

```sh
python setup.py install --user
```
(or `sudo python setup.py install` to install the package for all users)

Then import the package:
```python
import gradientai
```

### Tests

Execute `pytest` to run the tests.

## Getting Started

Please follow the [installation procedure](#installation--usage) and then run the following:

```python

import time
import gradientai
from gradientai.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://api.gradient.ai/api
# See configuration.py for a list of all supported configuration parameters.
configuration = gradientai.Configuration(
    host = "https://api.gradient.ai/api"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

# Configure Bearer authorization (JWT): bearerAuth
configuration = gradientai.Configuration(
    access_token = os.environ["BEARER_TOKEN"]
)


# Enter a context with an instance of the API client
with gradientai.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = gradientai.LicensesApi(api_client)
    id = 'id_example' # str | 
    x_preemo_workspace_id = 'x_preemo_workspace_id_example' # str | 

    try:
        # Agree to the license
        api_response = api_instance.create_license(id, x_preemo_workspace_id)
        print("The response of LicensesApi->create_license:\n")
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling LicensesApi->create_license: %s\n" % e)

```

## Documentation for API Endpoints

All URIs are relative to *https://api.gradient.ai/api*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*LicensesApi* | [**create_license**](docs/LicensesApi.md#create_license) | **POST** /licenses/{id} | Agree to the license
*LicensesApi* | [**get_license**](docs/LicensesApi.md#get_license) | **GET** /licenses/{id} | Describe license
*LicensesApi* | [**get_model_licenses**](docs/LicensesApi.md#get_model_licenses) | **GET** /models/{id}/licenses | License info for model
*ModelsApi* | [**create_model**](docs/ModelsApi.md#create_model) | **POST** /models | Create model
*ModelsApi* | [**delete_model**](docs/ModelsApi.md#delete_model) | **DELETE** /models/{id} | Delete model.
*ModelsApi* | [**get_model**](docs/ModelsApi.md#get_model) | **GET** /models/{id} | Describe model
*ModelsApi* | [**get_model_licenses**](docs/ModelsApi.md#get_model_licenses) | **GET** /models/{id}/licenses | License info for model
*ModelsApi* | [**list_models**](docs/ModelsApi.md#list_models) | **GET** /models | List available models
*ModelsApi* | [**query_model**](docs/ModelsApi.md#query_model) | **GET** /models/{id}/queries | Query model
*ModelsApi* | [**train_model**](docs/ModelsApi.md#train_model) | **PUT** /models/{id} | Train model


## Documentation For Models

 - [CreateLicenseError](docs/CreateLicenseError.md)
 - [CreateModelError](docs/CreateModelError.md)
 - [CreateModelRequestBody](docs/CreateModelRequestBody.md)
 - [CreateModelRequestBodyInitialHyperparameters](docs/CreateModelRequestBodyInitialHyperparameters.md)
 - [CreateModelRequestBodyInitialHyperparametersLoraHyperparameters](docs/CreateModelRequestBodyInitialHyperparametersLoraHyperparameters.md)
 - [CreateModelRequestBodyInitialHyperparametersTrainingArguments](docs/CreateModelRequestBodyInitialHyperparametersTrainingArguments.md)
 - [CreateModelRequestBodyModel](docs/CreateModelRequestBodyModel.md)
 - [CreateModelSuccess](docs/CreateModelSuccess.md)
 - [DeleteModelError](docs/DeleteModelError.md)
 - [GetLicenseError](docs/GetLicenseError.md)
 - [GetLicenseSuccess](docs/GetLicenseSuccess.md)
 - [GetModelError](docs/GetModelError.md)
 - [GetModelIdParameter](docs/GetModelIdParameter.md)
 - [GetModelLicensesError](docs/GetModelLicensesError.md)
 - [GetModelLicensesSuccess](docs/GetModelLicensesSuccess.md)
 - [GetModelLicensesSuccessLicensesAgreedToInner](docs/GetModelLicensesSuccessLicensesAgreedToInner.md)
 - [GetModelSuccess](docs/GetModelSuccess.md)
 - [ListModelsError](docs/ListModelsError.md)
 - [ListModelsSuccess](docs/ListModelsSuccess.md)
 - [ListModelsSuccessModelsInner](docs/ListModelsSuccessModelsInner.md)
 - [ListModelsSuccessModelsInnerAnyOf](docs/ListModelsSuccessModelsInnerAnyOf.md)
 - [ListModelsSuccessModelsInnerAnyOf1](docs/ListModelsSuccessModelsInnerAnyOf1.md)
 - [QueryModelError](docs/QueryModelError.md)
 - [QueryModelSuccess](docs/QueryModelSuccess.md)
 - [TrainModelError](docs/TrainModelError.md)
 - [TrainModelRequestBody](docs/TrainModelRequestBody.md)
 - [TrainModelRequestBodySamplesInner](docs/TrainModelRequestBodySamplesInner.md)
 - [TrainModelRequestBodySamplesInnerFineTuningParameters](docs/TrainModelRequestBodySamplesInnerFineTuningParameters.md)
 - [TrainModelSuccess](docs/TrainModelSuccess.md)


<a id="documentation-for-authorization"></a>
## Documentation For Authorization


Authentication schemes defined for the API:
<a id="bearerAuth"></a>
### bearerAuth

- **Type**: Bearer authentication (JWT)


## Author





