# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: libspu/spu.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10libspu/spu.proto\x12\x03spu\"\x1a\n\nShapeProto\x12\x0c\n\x04\x64ims\x18\x01 \x03(\x03\"\x8d\x01\n\x0eValueMetaProto\x12 \n\tdata_type\x18\x01 \x01(\x0e\x32\r.spu.DataType\x12#\n\nvisibility\x18\x02 \x01(\x0e\x32\x0f.spu.Visibility\x12\x1e\n\x05shape\x18\x03 \x01(\x0b\x32\x0f.spu.ShapeProto\x12\x14\n\x0cstorage_type\x18\x04 \x01(\t\"M\n\x0fValueChunkProto\x12\x13\n\x0btotal_bytes\x18\x01 \x01(\x04\x12\x14\n\x0c\x63hunk_offset\x18\x02 \x01(\x04\x12\x0f\n\x07\x63ontent\x18\x03 \x01(\x0c\"\x99\n\n\rRuntimeConfig\x12#\n\x08protocol\x18\x01 \x01(\x0e\x32\x11.spu.ProtocolKind\x12\x1d\n\x05\x66ield\x18\x02 \x01(\x0e\x32\x0e.spu.FieldType\x12\x19\n\x11\x66xp_fraction_bits\x18\x03 \x01(\x03\x12\x1b\n\x13\x65nable_action_trace\x18\n \x01(\x08\x12\x1b\n\x13\x65nable_type_checker\x18\x0b \x01(\x08\x12\x1a\n\x12\x65nable_pphlo_trace\x18\x0c \x01(\x08\x12\x1f\n\x17\x65nable_runtime_snapshot\x18\r \x01(\x08\x12\x19\n\x11snapshot_dump_dir\x18\x0e \x01(\t\x12\x1c\n\x14\x65nable_pphlo_profile\x18\x0f \x01(\x08\x12\x1a\n\x12\x65nable_hal_profile\x18\x10 \x01(\x08\x12\x1a\n\x12public_random_seed\x18\x13 \x01(\x04\x12\x1c\n\x14share_max_chunk_size\x18\x14 \x01(\x04\x12!\n\x19\x66xp_div_goldschmidt_iters\x18\x32 \x01(\x03\x12\x30\n\x0c\x66xp_exp_mode\x18\x33 \x01(\x0e\x32\x1a.spu.RuntimeConfig.ExpMode\x12\x15\n\rfxp_exp_iters\x18\x34 \x01(\x03\x12\x30\n\x0c\x66xp_log_mode\x18\x35 \x01(\x0e\x32\x1a.spu.RuntimeConfig.LogMode\x12\x15\n\rfxp_log_iters\x18\x36 \x01(\x03\x12\x16\n\x0e\x66xp_log_orders\x18\x37 \x01(\x03\x12\x34\n\x0csigmoid_mode\x18\x38 \x01(\x0e\x32\x1e.spu.RuntimeConfig.SigmoidMode\x12#\n\x1b\x65nable_lower_accuracy_rsqrt\x18\x39 \x01(\x08\x12\x32\n\x0b\x62\x65\x61ver_type\x18\x46 \x01(\x0e\x32\x1d.spu.RuntimeConfig.BeaverType\x12/\n\x11ttp_beaver_config\x18G \x01(\x0b\x32\x14.spu.TTPBeaverConfig\x12\x1d\n\x15trunc_allow_msb_error\x18H \x01(\x08\x12\'\n\x1f\x65xperimental_disable_mmul_split\x18\x64 \x01(\x08\x12(\n experimental_enable_inter_op_par\x18\x65 \x01(\x08\x12(\n experimental_enable_intra_op_par\x18\x66 \x01(\x08\x12*\n\"experimental_disable_vectorization\x18g \x01(\x08\x12)\n!experimental_inter_op_concurrency\x18h \x01(\x04\"8\n\x07\x45xpMode\x12\x0f\n\x0b\x45XP_DEFAULT\x10\x00\x12\x0c\n\x08\x45XP_PADE\x10\x01\x12\x0e\n\nEXP_TAYLOR\x10\x02\"8\n\x07LogMode\x12\x0f\n\x0bLOG_DEFAULT\x10\x00\x12\x0c\n\x08LOG_PADE\x10\x01\x12\x0e\n\nLOG_NEWTON\x10\x02\"W\n\x0bSigmoidMode\x12\x13\n\x0fSIGMOID_DEFAULT\x10\x00\x12\x0f\n\x0bSIGMOID_MM1\x10\x01\x12\x10\n\x0cSIGMOID_SEG3\x10\x02\x12\x10\n\x0cSIGMOID_REAL\x10\x03\"J\n\nBeaverType\x12\x15\n\x11TrustedFirstParty\x10\x00\x12\x15\n\x11TrustedThirdParty\x10\x01\x12\x0e\n\nMultiParty\x10\x02J\x04\x08\x11\x10\x12J\x04\x08\x12\x10\x13\"O\n\x0fTTPBeaverConfig\x12\x13\n\x0bserver_host\x18\x01 \x01(\t\x12\x12\n\nsession_id\x18\x02 \x01(\t\x12\x13\n\x0b\x61\x64just_rank\x18\x03 \x01(\x05\"r\n\x11\x43ompilationSource\x12\"\n\x07ir_type\x18\x01 \x01(\x0e\x32\x11.spu.SourceIRType\x12\x0e\n\x06ir_txt\x18\x02 \x01(\x0c\x12)\n\x10input_visibility\x18\x03 \x03(\x0e\x32\x0f.spu.Visibility\"\x9b\x03\n\x0f\x43ompilerOptions\x12\x1b\n\x13\x65nable_pretty_print\x18\x01 \x01(\x08\x12\x1d\n\x15pretty_print_dump_dir\x18\x02 \x01(\t\x12,\n\x0bxla_pp_kind\x18\x03 \x01(\x0e\x32\x17.spu.XLAPrettyPrintKind\x12)\n!disable_sqrt_plus_epsilon_rewrite\x18\n \x01(\x08\x12 \n\x18\x64isable_div_sqrt_rewrite\x18\x0b \x01(\x08\x12.\n&disable_reduce_truncation_optimization\x18\x0c \x01(\x08\x12\'\n\x1f\x64isable_maxpooling_optimization\x18\r \x01(\x08\x12\x1f\n\x17\x64isallow_mix_types_opts\x18\x0e \x01(\x08\x12#\n\x1b\x64isable_select_optimization\x18\x0f \x01(\x08\x12\x32\n*enable_optimize_denominator_with_broadcast\x18\x10 \x01(\x08\"X\n\x0f\x45xecutableProto\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0binput_names\x18\x02 \x03(\t\x12\x14\n\x0coutput_names\x18\x04 \x03(\t\x12\x0c\n\x04\x63ode\x18\x06 \x01(\x0c*\xa7\x01\n\x08\x44\x61taType\x12\x0e\n\nDT_INVALID\x10\x00\x12\t\n\x05\x44T_I1\x10\x01\x12\t\n\x05\x44T_I8\x10\x02\x12\t\n\x05\x44T_U8\x10\x03\x12\n\n\x06\x44T_I16\x10\x04\x12\n\n\x06\x44T_U16\x10\x05\x12\n\n\x06\x44T_I32\x10\x06\x12\n\n\x06\x44T_U32\x10\x07\x12\n\n\x06\x44T_I64\x10\x08\x12\n\n\x06\x44T_U64\x10\t\x12\n\n\x06\x44T_F16\x10\n\x12\n\n\x06\x44T_F32\x10\x0b\x12\n\n\x06\x44T_F64\x10\x0c*=\n\nVisibility\x12\x0f\n\x0bVIS_INVALID\x10\x00\x12\x0e\n\nVIS_SECRET\x10\x01\x12\x0e\n\nVIS_PUBLIC\x10\x02*\xc1\x01\n\x06PtType\x12\x0e\n\nPT_INVALID\x10\x00\x12\t\n\x05PT_I8\x10\x01\x12\t\n\x05PT_U8\x10\x02\x12\n\n\x06PT_I16\x10\x03\x12\n\n\x06PT_U16\x10\x04\x12\n\n\x06PT_I32\x10\x05\x12\n\n\x06PT_U32\x10\x06\x12\n\n\x06PT_I64\x10\x07\x12\n\n\x06PT_U64\x10\x08\x12\n\n\x06PT_F32\x10\t\x12\n\n\x06PT_F64\x10\n\x12\x0b\n\x07PT_I128\x10\x0b\x12\x0b\n\x07PT_U128\x10\x0c\x12\x0b\n\x07PT_BOOL\x10\r\x12\n\n\x06PT_F16\x10\x0e*:\n\tFieldType\x12\x0e\n\nFT_INVALID\x10\x00\x12\x08\n\x04\x46M32\x10\x01\x12\x08\n\x04\x46M64\x10\x02\x12\t\n\x05\x46M128\x10\x03*N\n\x0cProtocolKind\x12\x10\n\x0cPROT_INVALID\x10\x00\x12\t\n\x05REF2K\x10\x01\x12\n\n\x06SEMI2K\x10\x02\x12\x08\n\x04\x41\x42Y3\x10\x03\x12\x0b\n\x07\x43HEETAH\x10\x04*%\n\x0cSourceIRType\x12\x07\n\x03XLA\x10\x00\x12\x0c\n\x08MLIR_HLO\x10\x01*1\n\x12XLAPrettyPrintKind\x12\x08\n\x04TEXT\x10\x00\x12\x07\n\x03\x44OT\x10\x01\x12\x08\n\x04HTML\x10\x02\x62\x06proto3')

_DATATYPE = DESCRIPTOR.enum_types_by_name['DataType']
DataType = enum_type_wrapper.EnumTypeWrapper(_DATATYPE)
_VISIBILITY = DESCRIPTOR.enum_types_by_name['Visibility']
Visibility = enum_type_wrapper.EnumTypeWrapper(_VISIBILITY)
_PTTYPE = DESCRIPTOR.enum_types_by_name['PtType']
PtType = enum_type_wrapper.EnumTypeWrapper(_PTTYPE)
_FIELDTYPE = DESCRIPTOR.enum_types_by_name['FieldType']
FieldType = enum_type_wrapper.EnumTypeWrapper(_FIELDTYPE)
_PROTOCOLKIND = DESCRIPTOR.enum_types_by_name['ProtocolKind']
ProtocolKind = enum_type_wrapper.EnumTypeWrapper(_PROTOCOLKIND)
_SOURCEIRTYPE = DESCRIPTOR.enum_types_by_name['SourceIRType']
SourceIRType = enum_type_wrapper.EnumTypeWrapper(_SOURCEIRTYPE)
_XLAPRETTYPRINTKIND = DESCRIPTOR.enum_types_by_name['XLAPrettyPrintKind']
XLAPrettyPrintKind = enum_type_wrapper.EnumTypeWrapper(_XLAPRETTYPRINTKIND)
DT_INVALID = 0
DT_I1 = 1
DT_I8 = 2
DT_U8 = 3
DT_I16 = 4
DT_U16 = 5
DT_I32 = 6
DT_U32 = 7
DT_I64 = 8
DT_U64 = 9
DT_F16 = 10
DT_F32 = 11
DT_F64 = 12
VIS_INVALID = 0
VIS_SECRET = 1
VIS_PUBLIC = 2
PT_INVALID = 0
PT_I8 = 1
PT_U8 = 2
PT_I16 = 3
PT_U16 = 4
PT_I32 = 5
PT_U32 = 6
PT_I64 = 7
PT_U64 = 8
PT_F32 = 9
PT_F64 = 10
PT_I128 = 11
PT_U128 = 12
PT_BOOL = 13
PT_F16 = 14
FT_INVALID = 0
FM32 = 1
FM64 = 2
FM128 = 3
PROT_INVALID = 0
REF2K = 1
SEMI2K = 2
ABY3 = 3
CHEETAH = 4
XLA = 0
MLIR_HLO = 1
TEXT = 0
DOT = 1
HTML = 2


_SHAPEPROTO = DESCRIPTOR.message_types_by_name['ShapeProto']
_VALUEMETAPROTO = DESCRIPTOR.message_types_by_name['ValueMetaProto']
_VALUECHUNKPROTO = DESCRIPTOR.message_types_by_name['ValueChunkProto']
_RUNTIMECONFIG = DESCRIPTOR.message_types_by_name['RuntimeConfig']
_TTPBEAVERCONFIG = DESCRIPTOR.message_types_by_name['TTPBeaverConfig']
_COMPILATIONSOURCE = DESCRIPTOR.message_types_by_name['CompilationSource']
_COMPILEROPTIONS = DESCRIPTOR.message_types_by_name['CompilerOptions']
_EXECUTABLEPROTO = DESCRIPTOR.message_types_by_name['ExecutableProto']
_RUNTIMECONFIG_EXPMODE = _RUNTIMECONFIG.enum_types_by_name['ExpMode']
_RUNTIMECONFIG_LOGMODE = _RUNTIMECONFIG.enum_types_by_name['LogMode']
_RUNTIMECONFIG_SIGMOIDMODE = _RUNTIMECONFIG.enum_types_by_name['SigmoidMode']
_RUNTIMECONFIG_BEAVERTYPE = _RUNTIMECONFIG.enum_types_by_name['BeaverType']
ShapeProto = _reflection.GeneratedProtocolMessageType('ShapeProto', (_message.Message,), {
  'DESCRIPTOR' : _SHAPEPROTO,
  '__module__' : 'libspu.spu_pb2'
  # @@protoc_insertion_point(class_scope:spu.ShapeProto)
  })
_sym_db.RegisterMessage(ShapeProto)

ValueMetaProto = _reflection.GeneratedProtocolMessageType('ValueMetaProto', (_message.Message,), {
  'DESCRIPTOR' : _VALUEMETAPROTO,
  '__module__' : 'libspu.spu_pb2'
  # @@protoc_insertion_point(class_scope:spu.ValueMetaProto)
  })
_sym_db.RegisterMessage(ValueMetaProto)

ValueChunkProto = _reflection.GeneratedProtocolMessageType('ValueChunkProto', (_message.Message,), {
  'DESCRIPTOR' : _VALUECHUNKPROTO,
  '__module__' : 'libspu.spu_pb2'
  # @@protoc_insertion_point(class_scope:spu.ValueChunkProto)
  })
_sym_db.RegisterMessage(ValueChunkProto)

RuntimeConfig = _reflection.GeneratedProtocolMessageType('RuntimeConfig', (_message.Message,), {
  'DESCRIPTOR' : _RUNTIMECONFIG,
  '__module__' : 'libspu.spu_pb2'
  # @@protoc_insertion_point(class_scope:spu.RuntimeConfig)
  })
_sym_db.RegisterMessage(RuntimeConfig)

TTPBeaverConfig = _reflection.GeneratedProtocolMessageType('TTPBeaverConfig', (_message.Message,), {
  'DESCRIPTOR' : _TTPBEAVERCONFIG,
  '__module__' : 'libspu.spu_pb2'
  # @@protoc_insertion_point(class_scope:spu.TTPBeaverConfig)
  })
_sym_db.RegisterMessage(TTPBeaverConfig)

CompilationSource = _reflection.GeneratedProtocolMessageType('CompilationSource', (_message.Message,), {
  'DESCRIPTOR' : _COMPILATIONSOURCE,
  '__module__' : 'libspu.spu_pb2'
  # @@protoc_insertion_point(class_scope:spu.CompilationSource)
  })
_sym_db.RegisterMessage(CompilationSource)

CompilerOptions = _reflection.GeneratedProtocolMessageType('CompilerOptions', (_message.Message,), {
  'DESCRIPTOR' : _COMPILEROPTIONS,
  '__module__' : 'libspu.spu_pb2'
  # @@protoc_insertion_point(class_scope:spu.CompilerOptions)
  })
_sym_db.RegisterMessage(CompilerOptions)

ExecutableProto = _reflection.GeneratedProtocolMessageType('ExecutableProto', (_message.Message,), {
  'DESCRIPTOR' : _EXECUTABLEPROTO,
  '__module__' : 'libspu.spu_pb2'
  # @@protoc_insertion_point(class_scope:spu.ExecutableProto)
  })
_sym_db.RegisterMessage(ExecutableProto)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _DATATYPE._serialized_start=2286
  _DATATYPE._serialized_end=2453
  _VISIBILITY._serialized_start=2455
  _VISIBILITY._serialized_end=2516
  _PTTYPE._serialized_start=2519
  _PTTYPE._serialized_end=2712
  _FIELDTYPE._serialized_start=2714
  _FIELDTYPE._serialized_end=2772
  _PROTOCOLKIND._serialized_start=2774
  _PROTOCOLKIND._serialized_end=2852
  _SOURCEIRTYPE._serialized_start=2854
  _SOURCEIRTYPE._serialized_end=2891
  _XLAPRETTYPRINTKIND._serialized_start=2893
  _XLAPRETTYPRINTKIND._serialized_end=2942
  _SHAPEPROTO._serialized_start=25
  _SHAPEPROTO._serialized_end=51
  _VALUEMETAPROTO._serialized_start=54
  _VALUEMETAPROTO._serialized_end=195
  _VALUECHUNKPROTO._serialized_start=197
  _VALUECHUNKPROTO._serialized_end=274
  _RUNTIMECONFIG._serialized_start=277
  _RUNTIMECONFIG._serialized_end=1582
  _RUNTIMECONFIG_EXPMODE._serialized_start=1291
  _RUNTIMECONFIG_EXPMODE._serialized_end=1347
  _RUNTIMECONFIG_LOGMODE._serialized_start=1349
  _RUNTIMECONFIG_LOGMODE._serialized_end=1405
  _RUNTIMECONFIG_SIGMOIDMODE._serialized_start=1407
  _RUNTIMECONFIG_SIGMOIDMODE._serialized_end=1494
  _RUNTIMECONFIG_BEAVERTYPE._serialized_start=1496
  _RUNTIMECONFIG_BEAVERTYPE._serialized_end=1570
  _TTPBEAVERCONFIG._serialized_start=1584
  _TTPBEAVERCONFIG._serialized_end=1663
  _COMPILATIONSOURCE._serialized_start=1665
  _COMPILATIONSOURCE._serialized_end=1779
  _COMPILEROPTIONS._serialized_start=1782
  _COMPILEROPTIONS._serialized_end=2193
  _EXECUTABLEPROTO._serialized_start=2195
  _EXECUTABLEPROTO._serialized_end=2283
# @@protoc_insertion_point(module_scope)
