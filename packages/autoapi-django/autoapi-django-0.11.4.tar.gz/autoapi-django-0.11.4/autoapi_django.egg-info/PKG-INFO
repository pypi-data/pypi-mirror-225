Metadata-Version: 2.1
Name: autoapi-django
Version: 0.11.4
Summary: Library for generating transport logic for web application
Author-email: Artem Romanukov <vens148@gmail.com>
License: The MIT License (MIT)
        
        Copyright (c) 2018 Sebastián Ramírez
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in
        all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
        THE SOFTWARE.
        
Project-URL: homepage, https://github.com/romanukov/autoapi/
Project-URL: documentation, https://github.com/romanukov/autoapi/
Project-URL: repository, https://github.com/romanukov/autoapi/
Keywords: api,django,swagger,openapi
Classifier: Topic :: Software Development
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE.txt

# AutoAPI

AutoAPI собирает абстрагирует ваше приложение от слоя с передачей данных,
генерируя API из чистых классов, содержащих логику.

## Документация

- [Russian](./docs/autoapi/index.md)
- English (in future)

## Развертывание на локалке

Устанавливаем virtual env:

```shell
python3 -m venv venv
. venv/bin/activate
```

Устанавливаем библиотеку с зависимостями
```shell
pip install .
```

Переходим в example-проект, мигрируем БД (SQLite) и запускаем:
```shell
cd example/online_shop
python manage.py migrate
python manage.py runserver
```

По урле http://127.0.0.1:8000/docs/ будет доступен Swagger для сгенерированного API.
Оттуда можно дергать хэндлеры.

Рекомендуется создать суперюзера (`python manage.py createsuperuser`) и авторизоваться в админке.
Чтобы проверить корректную работу API, можно дернуть хэндлер `user.get_user` в сваггере.


Для билда и отправки в PyPI надо сделать:
```shell
pip install build
python -m build
pip install twine
twine upload dist/*
```
